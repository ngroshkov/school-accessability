<<<<<<< HEAD
=======
<<<<<<< HEAD
<<<<<<< HEAD
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
#stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
#stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size = 4,width = 0.9, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
#stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size = 4,width = 2, vjust=-0.5) +
theme(legend.position="none");
=======
>>>>>>> f717f8aa8e9447e084c08f080993494f5cc15060
=======
>>>>>>> f717f8aa8e9447e084c08f080993494f5cc15060
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
#stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size = 4,weight = 2, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
#stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
geom_text(binwidth=1, aes(label=round(..count..)), size = 4,weight = 2, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
#stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
geom_text(binwidth=1,  size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
#stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
geom_text(size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size = 3, vjust=-1.0) +
#geom_text(binwidth=1, aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text",  aes(label=round(..count..)), size=4, vjust=-0.5) +
#geom_text(binwidth=1, aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=4, vjust=-0.5) +
#geom_text(binwidth=1, aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), fontface="italic",size=4, vjust=-0.5) +
#geom_text(binwidth=1, aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), fontface="bold",size=4, vjust=-0.5) +
#geom_text(binwidth=1, aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=4, fontface="bold", vjust=-0.5) +
#geom_text(binwidth=1, aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, fontface="bold", vjust=-0.5) +
#geom_text(binwidth=1, aes(label=round(..count..)), size = 4, vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_COMPLEX")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R500")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R800")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R1000")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="red", fontface="bold", vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R1000")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R1000")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_COMPLEX")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R1000")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R500")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R800")
save.image()
savehistory()
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
ggtitle("Plant growth");
freqhist.choise;
}
savehistory()
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R500")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
ggtitle("Выбор школ в радиусе");
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R500")
comment(buildings$ACCESSIBLE_SCHOOLS_R500)
comment(buildings[["ACCESSIBLE_SCHOOLS_R500"]])
comment(buildings$ACCESSIBLE_SCHOOLS_R500) <- "Выбор школ радиусе 500 м"
comment(buildings$ACCESSIBLE_SCHOOLS_R800) <- "Выбор школ в радиусе 800 м"
comment(buildings$ACCESSIBLE_SCHOOLS_R500) <- "Выбор школ в радиусе 500 м"
comment(buildings$ACCESSIBLE_SCHOOLS_R1000) <- "Выбор школ в радиусе 1000 м"
comment(buildings$ACCESSIBLE_SCHOOLS_AREA) <- "Выбор школ в рамках закрепленной территории"
comment(buildings$ACCESSIBLE_SCHOOLS_COMPLEX) <- "Выбор школ в рамках закрепленной территории и комплекса"
comment(buildings[["ACCESSIBLE_SCHOOLS_R500"]])
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников (тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
ggtitle(comment(buildings[[field]]));
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_COMPLEX")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R500")
comment(buildings$ACCESSIBLE_SCHOOLS_R800)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R800")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R1000")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_СЩЬЗДУЧ")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_COMPLEX")
save.image()
savehistory()
View(buildings)
View(buildings)
buildings1 <- read.csv("../csv/buildings.csv", stringsAsFactors = FALSE, na.strings = "")
View(buildings1)
encoding
Sys.getlocale()
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings1)
View(buildings)
rm(buildings1)
View(buildings)
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings)
defaults write org.R-project.R LC_CTYPE ru_RU.UTF-8
system("locale")
View(buildings)
View(buildings)
Sys.getlocale()
buildings$ADDRESS
system("env")
Sys.getlocale()
Sys.getlocale(category = "LC_CTYPE")
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings)
installed.packages()
remove.packages("knitr")
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_СЩЬЗДУЧ")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R800")
update.packages(checkBuilt=TRUE)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R800")
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
>>>>>>> 4a0228917fdf3473c7012c84268b27db4d7767a4
installed.packages()
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R800")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R500")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R1000")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_COMPLEX")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников\n(тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 325)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
ggtitle(comment(buildings[[field]]));
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_COMPLEX")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R500")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R800")
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_R1000")
save.image()
savehistory()
View(buildings)
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings)
resdistrict <- edzones
rm(edzones)
resdistricts <- resdistrict
rm(resdistrict)
buildings$RESDISTRICT_ID <- buildings$EDZONE_ID
buildings1 <- buildings[c(1:9,18,11:17)]
View(buildings1)
buildings <- buildings[c(1:9,18,11:17)]
rm(buildings1)
rm(choise.histogramm.table)
school.blocks$RESDISTRICT_ID <- school.blocks$EDZONE_ID
school.blocks1 <- school.blocks[c(1:8,12,10,11)]
school.blocks <- school.blocks[c(1:8,12,10,11)]
rm(school.blocks1)
save.image()
savehistory()
rm(freqhist.choise1)
rm(freqhist.choise.catchment)
save.image()
View(buildings)
savehistory()
resdistrict.school2building = function(buildings, schools, school.blocks){
resdistrict.school2building <- data.frame();
for (sIdx in 1:nrow(schools)) {
sId <- schools$ID[sIdx];
rdIds <- unique(school.blocks[school.blocks$SCHOOL_ID == sId,]$RESDISTRICT_ID);
df <- data.frame(BUILDING_ID = buildings[buildings$RESDISTRICT_ID %in% rdIds,]$ID);
df$SCHOOL_ID <- sId;
resdistrict.school2building <- rbind(resdistrict.school2building, df);
}
resdistrict.school2building <- resdistrict.school2building[c(2,1)];
resdistrict.school2building;
}
resdistrict.school2building = function(buildings, schools, school.blocks){
resdistrict.school2building <- data.frame();
for (sIdx in 1:nrow(schools)) {
sId <- schools$ID[sIdx];
rdIds <- unique(school.blocks[school.blocks$SCHOOL_ID == sId,]$RESDISTRICT_ID);
df <- data.frame(BUILDING_ID = buildings[buildings$RESDISTRICT_ID %in% rdIds,]$ID);
df$SCHOOL_ID <- sId;
resdistrict.school2building <- rbind(resdistrict.school2building, df);
<<<<<<< HEAD
<<<<<<< HEAD
}
resdistrict.school2building <- resdistrict.school2building[c(2,1)];
resdistrict.school2building <- resdistrict.school2building[order(resdistrict.school2building$SCHOOL_ID),]
resdistrict.school2building;
}
=======
}
resdistrict.school2building <- resdistrict.school2building[c(2,1)];
resdistrict.school2building <- resdistrict.school2building[order(resdistrict.school2building$SCHOOL_ID),]
resdistrict.school2building;
}
>>>>>>> f717f8aa8e9447e084c08f080993494f5cc15060
=======
}
resdistrict.school2building <- resdistrict.school2building[c(2,1)];
resdistrict.school2building <- resdistrict.school2building[order(resdistrict.school2building$SCHOOL_ID),]
resdistrict.school2building;
}
>>>>>>> f717f8aa8e9447e084c08f080993494f5cc15060
school2building.resdistrict <- resdistrict.school2building(buildings, schools, school.blocks)
debugSource('/media/WORK/hse/school-accessibility/r/resdistrict.school2building.R')
school2building.resdistrict <- resdistrict.school2building(buildings, schools, school.blocks)
View(df)
View(df)
resdistrict.school2building = function(buildings, schools, school.blocks){
resdistrict.school2building <- data.frame();
for (sIdx in 1:nrow(schools)) {
sId <- schools$ID[sIdx];
rdIds <- unique(school.blocks[school.blocks$SCHOOL_ID == sId,]$RESDISTRICT_ID);
df <- data.frame(BUILDING_ID = buildings[buildings$RESDISTRICT_ID %in% rdIds,]$ID);
if (nrow(df) == 0) {
next;
}
df$SCHOOL_ID <- sId;
resdistrict.school2building <- rbind(resdistrict.school2building, df);
print(paste(sIdx, " ", schools$NAME[sIdx], " ", round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
resdistrict.school2building <- resdistrict.school2building[c(2,1)];
resdistrict.school2building <- resdistrict.school2building[order(resdistrict.school2building$SCHOOL_ID),]
resdistrict.school2building;
}
school2building.resdistrict <- resdistrict.school2building(buildings, schools, school.blocks)
View(school2building.resdistrict)
save.image()
savehistory()
write.csv(school2building.resdistrict, "../csv/school2building.resdistrict.csv", row.names = FALSE)
features.connection.resdistrict <- generate.connection.features(buildings, schools, school.blocks, school2building.resdistrict)
library("geosphere", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
features.connection.resdistrict <- generate.connection.features(buildings, schools, school.blocks, school2building.resdistrict)
View(buildings)
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings)
write.csv(features.connection.resdistrict, "../csv/features.connection.resdistrict.csv", row.names = FALSE)
resdistricts$SCHOOL_COUNT <- sapply(resdistricts$ID, {function(x) nrow(unique(school.blocks[school.blocks$RESDISTRICT_ID == x,]$SCHOOL_ID))})
View(resdistricts)
school.blocks[school.blocks$RESDISTRICT_ID == 1,]
school.blocks[school.blocks$RESDISTRICT_ID == 2,]
school.blocks[school.blocks$RESDISTRICT_ID == 2,]$SCHOOL_ID
unique(school.blocks[school.blocks$RESDISTRICT_ID == 2,]$SCHOOL_ID)
length(unique(school.blocks[school.blocks$RESDISTRICT_ID == 2,]$SCHOOL_ID))
resdistricts$SCHOOL_COUNT <- sapply(resdistricts$ID, {function(x) length(unique(school.blocks[school.blocks$RESDISTRICT_ID == x,]$SCHOOL_ID))})
buildings <- merge(buildings, resdistricts[c(1,4)], by.x = "RESDISTRICT_ID", by.y="ID")
View(buildings)
buildings <- buildings[c(2:10,1,11:18)]
buildings <- buildings[order(buildings$ID),]
View(buildings)
buildings$ACCESSIBLE_SCHOOLS_RESDISTRICT <- buildings$SCHOOL_COUNT
View(buildings)
buildings$SCHOOL_COUNT <- NULL
View(buildings)
<<<<<<< HEAD
<<<<<<< HEAD
save.image()
savehistory()
write.csv(buildings, file = "../csv/buildings.csv", na = "", row.names = FALSE)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_RESDISTRICT")
comment(buildings$ACCESSIBLE_SCHOOLS_RESDISTRICT) <- "Выбор школ в рамках жилого района"
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_RESDISTRICT")
=======
=======
>>>>>>> f717f8aa8e9447e084c08f080993494f5cc15060
save.image()
savehistory()
write.csv(buildings, file = "../csv/buildings.csv", na = "", row.names = FALSE)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_RESDISTRICT")
comment(buildings$ACCESSIBLE_SCHOOLS_RESDISTRICT) <- "Выбор школ в рамках жилого района"
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_RESDISTRICT")
save.image()
savehistory()
View(school2building.resdistrict)
View(school2building.resdistrict)
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings)
school2building.r500.new <- school2building.r500
rm(school2building.r500.new)
school2building.snip <- merge(school2building.resdistrict, school2building.r500, by=c("SCHOOL_ID", "BUILDING_ID"), all=FALSE)
View(school2building.snip)
school2building.snip[school2building.snip$BUILDING_ID == 24022,]
nrow(school2building.snip[school2building.snip$BUILDING_ID == 24022,])
buildings$ACCESSIBLE_SCHOOLS_SNIP <- sapply(buildings$ID, {function(x) nrow(school2building.snip[school2building.snip$BUILDING_ID == x,])})
save.image()
savehistory()
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP")
comment(buildings$ACCESSIBLE_SCHOOLS_SNIP) <- "Выбор школ по СНиПам"
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP")
freqhist.choise  <- function(buildings, field) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
"#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name="Количество школ", expand = c(0,2), limits=c(0:19)) +
scale_y_continuous(name="Количество школьников\n(тыс. чел.)", breaks=seq(0, 325, by = 25), limits=c(0, 340)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
ggtitle(comment(buildings[[field]]));
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP")
write.csv(buildings, file = "../csv/model/buildings.csv", na = "", row.names = FALSE)
write.csv(school2building.snip, "../csv/school2building/school2building.snip.csv", row.names = FALSE)
features.connection.snip <- generate.connection.features(buildings, schools, school.blocks, school2building.snip)
library("geosphere", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
features.connection.snip <- generate.connection.features(buildings, schools, school.blocks, school2building.snip)
write.csv(features.connection.snip, "../csv/features/features.connection.snip.csv", row.names = FALSE)
<<<<<<< HEAD
>>>>>>> f717f8aa8e9447e084c08f080993494f5cc15060
=======
>>>>>>> f717f8aa8e9447e084c08f080993494f5cc15060
save.image()
savehistory()
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings)
View(schools)
View(complexes)
intended.students  <- function(schoolId, field) {
bIds <- school2building.catchment[school2building.catchment$SCHOOL_ID == schoolId,];
blds <- buildings[buildings$ID %in% bIds,]
intended.students <- sum(blds$STUDENTS/blds[[field]]);
intended.students;
}
schools$STUDENTS_PROJECT_CATCHMENT <- sapply(schools$ID, intended.students(x, "ACCESSIBLE_SCHOOLS_AREA"))
schools$STUDENTS_PROJECT_CATCHMENT <- sapply(schools$ID, {function(x) intended.students(x, "ACCESSIBLE_SCHOOLS_AREA")})
intended.students  <- function(schoolId, school2building, field) {
bIds <- school2building[school2building$SCHOOL_ID == schoolId,];
blds <- buildings[buildings$ID %in% bIds,]
intended.students <- sum(blds$STUDENTS/blds[[field]]);
intended.students;
}
schools$STUDENTS_PROJECT_CATCHMENT <- sapply(schools$ID, {function(x) intended.students(x, school2building.catchment, "ACCESSIBLE_SCHOOLS_AREA")})
View(schools)
sum(schools$STUDENTS_PROJECT_CATCHMENT)
intended.students  <- function(schoolId, school2building, field) {
bIds <- school2building[school2building$SCHOOL_ID == schoolId,]$BUILDING_ID;
blds <- buildings[buildings$ID %in% bIds,]
intended.students <- sum(blds$STUDENTS/blds[[field]]);
intended.students;
}
schools$STUDENTS_PROJECT_CATCHMENT <- sapply(schools$ID, {function(x) intended.students(x, school2building.catchment, "ACCESSIBLE_SCHOOLS_AREA")})
10030
bIds <- school2building[school2building$SCHOOL_ID == 10030,]$BUILDING_ID;
bIds <- school2building.catchment[school2building.catchment$SCHOOL_ID == 10030,]$BUILDING_ID;
blds
bIds
blds <- buildings[buildings$ID %in% bIds,]
View(blds)
sum(blds$STUDENTS)
school2building.catchment[school2building.catchment$BUILDING_ID==28478,]
school2building.catchment[school2building.catchment$BUILDING_ID==28479,]
school2building.catchment[school2building.catchment$BUILDING_ID==28480,]
school2building.catchment[school2building.catchment$BUILDING_ID==28481,]
school2building.catchment[school2building.catchment$BUILDING_ID==28482,]
school2building.catchment[school2building.catchment$BUILDING_ID==28483,]
school2building.catchment[school2building.catchment$BUILDING_ID==28484,]
school2building.catchment[school2building.catchment$BUILDING_ID==28485,]
school2building.catchment[school2building.catchment$BUILDING_ID==28486,]
school2building.catchment[school2building.catchment$BUILDING_ID==28487,]
school2building.catchment[school2building.catchment$BUILDING_ID==18108,]
bIds <- school2building.catchment[school2building.catchment$SCHOOL_ID == 11236,]$BUILDING_ID;
blds <- buildings[buildings$ID %in% bIds,]
View(blds)
bIds <- school2building.catchment[school2building.catchment$SCHOOL_ID == 1,]$BUILDING_ID;
blds <- buildings[buildings$ID %in% bIds,]
View(blds)
bIds <- school2building.catchment[school2building.catchment$BUILDING_ID == 1,]$BUILDING_ID;
blds <- buildings[buildings$ID %in% bIds,]
View(blds)
bIds
bIds <- school2building.catchment[school2building.catchment$BUILDING_ID == 1,];
school2building.catchment[school2building.catchment$BUILDING_ID == 1,];
bIds <- school2building.catchment[school2building.catchment$SCHOOL_ID == 11315,]$BUILDING_ID;
blds <- buildings[buildings$ID %in% bIds,]
View(blds)
blds$STUDENTS/blds[["ACCESSIBLE_SCHOOLS_AREA"]]
sum(blds$STUDENTS/blds[["ACCESSIBLE_SCHOOLS_AREA"]])
rm(blds, bIds)
schools$CATCHEMENT_AREA_STUDENTS <- NULL
View(schools)
schools$STUDENTS_PROJECT_COMPLEX <- sapply(schools$ID, {function(x) intended.students(x, school2building.catchment, "ACCESSIBLE_SCHOOLS_COMPLEX")})
agg <- aggregate(school.blocks$ID, list(SCHOOL_ID = school.blocks$SCHOOL_ID), length)
View(agg)
agg <- agg[order(agg$x, DESC = TRUE),]
agg <- agg[order(agg$x, decreasing = TRUE),]
View(agg)
row.names(agg) <- NULL
View(agg)
aggg <- aggregate(schools$ID, list(COMPLEX_ID = schools$COMPLEX_ID), length)
View(aggg)
aggg$SCHOOL_COUNT
aggg$SCHOOL_COUNT <- aggg$x
aggg$x <- NULL
agg$BUILDING_COUNT <- agg$x
agg$x <- NULL
View(agg)
agg$BLOCK_COUNT <- agg$BUILDING_COUNT
agg$BUILDING_COUNT <- NULL
View(aggg)
View(agg)
ag <- aggregate(school2building.catchment$BUILDING_ID, list(SCHOOL_ID = school2building.catchment$SCHOOL_ID), length)
View(ag)
ag$BUILDING_COUNT <- ag$x
ag$x <- NULL
agg <- merge(agg, ag, by="SCHOOL_ID", all.x = TRUE)
View(agg)
agg$BUILDING_COUNT <- sapply(agg$BUILDING_COUNT, {function(x) ifelse(is.na(x), 0, x)})
View(agg)
agg <- agg[order(agg$x, decreasing = TRUE),]
agg <- agg[order(agg$BLOCK_COUNT, decreasing = TRUE),]
View(agg)
agg <- agg[order(agg$BUILDING_COUNT, decreasing = TRUE),]
agg <- agg[order(agg$BLOCK_COUNT, decreasing = TRUE),]
View(agg)
rownames(agg) <- NULL
View(agg)
agg <- merge(agg$SCHOOL_ID, schools[c(1,9)], by.x = "SCHOOL_ID", by.y = "ID")
View(agg)
agg <- merge(agg, schools[c(1,9)], by.x = "SCHOOL_ID", by.y = "ID")
View(agg)
agg <- merge(agg, aggg, by = "COMPLEX_ID")
View(agg)
agg <- agg[order(agg$BUILDING_COUNT, decreasing = TRUE),]
agg <- agg[order(agg$BLOCK_COUNT, decreasing = TRUE),]
View(agg)
agg <- agg[order(agg$SCHOOL_COUNT, decreasing = TRUE),]
agg <- agg[order(agg$BLOCK_COUNT, decreasing = TRUE),]
View(agg)
rownames(agg) <- NULL
View(agg)
rm(ag, aggg)
save.image()
savehistory()
schools[schools$COMPLEX_ID == 10087,]
schools[schools$COMPLEX_ID == 821,]
schools[schools$COMPLEX_ID == 848,]
schools[schools$COMPLEX_ID == 843,]
schools[schools$COMPLEX_ID == 610,]
schools[schools$ID == 11467,]
schools[schools$COMPLEX_ID == 319,]
schools[schools$COMPLEX_ID == 613,]
schools[schools$ID == 10087,]
schools[schools$COMPLEX_ID == 613,]
schools[schools$COMPLEX_ID == 821,]$ID
schools[schools$COMPLEX_ID == 848,]$ID
schools[schools$COMPLEX_ID == 843,]$ID
schools[schools$COMPLEX_ID == 610,]$ID
schools[schools$COMPLEX_ID == 319,]$ID
schools[schools$COMPLEX_ID == 613,]$ID
intersect(c(10195), schools[schools$COMPLEX_ID == 613,]$ID)
intersect(c(10195, 11240), schools[schools$COMPLEX_ID == 613,]$ID)
intersect(c(10195, 11240, 11241), schools[schools$COMPLEX_ID == 613,]$ID)
intersect(c(10195, 11240, 11243), schools[schools$COMPLEX_ID == 613,]$ID)
intersect(c(10195, 11240, 11240), schools[schools$COMPLEX_ID == 613,]$ID)
length(intersect(c(10195, 11240, 11240), schools[schools$COMPLEX_ID == 613,]$ID))
complex.school2building = function(complex, schools, buildings, school2building) {
complex.school2building <- data.frame();
excludeIds <- c(10087, 10050, 10903, 11337, 10223, 10224, 10856,
10771, 10906, 11030, 11464, 11465, 11466, 11467,
10195, 11240, 11241)
for (cIdx in 1:nrow(complex)) {
cId <- complex$ID[cIdx];
sls <- schools[schools$COMPLEX_ID == cId,];
if (length(intersect(excludeIds, sls$ID)) != 0) {
next;
}
bIds <- unique(school2building[school2building$SCHOOL_ID %in% sls$ID,]$BUILDING_ID);
for (sIdx in 1:nrow(sls)) {
df <- data.frame(BUILDING_ID = bIds);
df$SCHOOL_ID <- sIdx;
sId <- sls$ID[sIdx];
sb <- school.blocks[school.blocks$SCHOOL_ID == sId,];
complex.school2building <- rbind(complex.school2building, df);
}
print(paste(cIdx, " ", round((100*cIdx)/nrow(complex), digits = 2), "%", sep = ""));
}
complex.school2building <- complex.school2building[c(2,1)];
complex.school2building <- complex.school2building[order(complex.school2building$SCHOOL_ID),]
complex.school2building;
}
school2building.catchment.complex <- complex.school2building(complex, schools, buildings, school2building)
school2building.catchment.complex <- complex.school2building(complexes, schools, buildings, school2building.catchment)
complex.school2building = function(complex, schools, buildings, school2building) {
complex.school2building <- data.frame();
excludeIds <- c(10087, 10050, 10903, 11337, 10223, 10224, 10856,
10771, 10906, 11030, 11464, 11465, 11466, 11467,
10195, 11240, 11241)
for (cIdx in 1:nrow(complex)) {
cId <- complex$ID[cIdx];
sls <- schools[schools$COMPLEX_ID == cId,];
if (length(intersect(excludeIds, sls$ID)) != 0) {
next;
}
bIds <- unique(school2building[school2building$SCHOOL_ID %in% sls$ID,]$BUILDING_ID);
if (length(bIds) == 0) {
next;
}
for (sIdx in 1:nrow(sls)) {
sId <- sls$ID[sIdx];
df <- data.frame(BUILDING_ID = bIds);
df$SCHOOL_ID <- sIdx;
complex.school2building <- rbind(complex.school2building, df);
}
print(paste(cIdx, " ", round((100*cIdx)/nrow(complex), digits = 2), "%", sep = ""));
}
complex.school2building <- complex.school2building[c(2,1)];
complex.school2building <- complex.school2building[order(complex.school2building$SCHOOL_ID),]
complex.school2building;
}
school2building.catchment.complex <- complex.school2building(complexes, schools, buildings, school2building.catchment)
school2building.catchment.complex.new <- school2building.catchment.complex
complex.school2building = function(complex, schools, buildings, school2building) {
complex.school2building <- data.frame();
excludeIds <- c(10087, 10050, 10903, 11337, 10223, 10224, 10856,
10771, 10906, 11030, 11464, 11465, 11466, 11467,
10195, 11240, 11241)
for (cIdx in 1:nrow(complex)) {
cId <- complex$ID[cIdx];
sls <- schools[schools$COMPLEX_ID == cId,];
if (length(intersect(excludeIds, sls$ID)) != 0) {
next;
}
bIds <- unique(school2building[school2building$SCHOOL_ID %in% sls$ID,]$BUILDING_ID);
if (length(bIds) == 0) {
next;
}
for (sIdx in 1:nrow(sls)) {
sId <- sls$ID[sIdx];
df <- data.frame(BUILDING_ID = bIds);
df$SCHOOL_ID <- sIdx;
df$COMPLEX_ID <- cId;
complex.school2building <- rbind(complex.school2building, df);
}
print(paste(cIdx, " ", round((100*cIdx)/nrow(complex), digits = 2), "%", sep = ""));
}
complex.school2building <- complex.school2building[c(2,1,3)];
complex.school2building <- complex.school2building[order(complex.school2building$SCHOOL_ID),]
complex.school2building;
}
school2building.catchment.complex <- complex.school2building(complexes, schools, buildings, school2building.catchment)
school2building.catchment.complex.new <- school2building.catchment.complex
s2b <- school2building.catchment[school2building.catchment %in% c(10087, 10050, 10903, 11337, 10223, 10224, 10856, 10771, 10906, 11030),]
s2b <- school2building.catchment[school2building.catchment$SCHOOL_ID %in% c(10087, 10050, 10903, 11337, 10223, 10224, 10856, 10771, 10906, 11030),]
View(s2b)
s2b <- merge(s2b, schools[c(1,9)], by.x = "SCHOOL_ID", by.y = "ID", all.x = TRUE)
school2building.catchment.complex.new <- rbind(school2building.catchment.complex.new, s2b)
s2b <- school2building.catchment[school2building.catchment$SCHOOL_ID %in% c(11467,11241),]
s2b <- merge(s2b, schools[c(1,9)], by.x = "SCHOOL_ID", by.y = "ID", all.x = TRUE)
school2building.catchment.complex.new <- rbind(school2building.catchment.complex.new, s2b)
s2b <- school2building.catchment[school2building.catchment$SCHOOL_ID %in% c(11467),]
s2b <- merge(s2b, buildings[c(1,7)], by.x = "BUILDING_ID", by.y = "ID", all.x = TRUE)
unique(s2b$DISTRICT_ID)
s2b1 <- s2b[s2b$DISTRICT_ID %in% c(97,106),]
s2b2 <- s2b[s2b$DISTRICT_ID %in% c(81,84),]
s2b1$DISTRICT_ID <- NULL
s2b2$DISTRICT_ID <- NULL
View(s2b1)
View(s2b2)
s2b1 <- s2b1[c(2,1)]
s2b2 <- s2b2[c(2,1)]
school2building.catchment$SCHOOL_ID <- as.integer(school2building.catchment$SCHOOL_ID)
school2building.catchment.complex$SCHOOL_ID <- as.integer(school2building.catchment.complex$SCHOOL_ID)
school2building.catchment.complex.new$SCHOOL_ID <- as.integer(school2building.catchment.complex.new$SCHOOL_ID)
s2b$SCHOOL_ID <- as.integer(s2b$SCHOOL_ID)
s2b1$SCHOOL_ID <- as.integer(s2b1$SCHOOL_ID)
s2b2$SCHOOL_ID <- as.integer(s2b2$SCHOOL_ID)
View(s2b1)
View(s2b1)
s2b1 <- merge(s2b1, schools[c(1,9)], by.x = "SCHOOL_ID", by.y = "ID", all.x = TRUE)
s2b2 <- merge(s2b2, schools[c(1,9)], by.x = "SCHOOL_ID", by.y = "ID", all.x = TRUE)
s2b1$SCHOOL_ID <- 11466
school2building.catchment.complex.new <- rbind(school2building.catchment.complex.new, s2b1)
s2b2$SCHOOL_ID <- 11464
school2building.catchment.complex.new <- rbind(school2building.catchment.complex.new, s2b2)
s2b2$SCHOOL_ID <- 11465
school2building.catchment.complex.new <- rbind(school2building.catchment.complex.new, s2b2)
rm(s2b1, s2b2)
s2b <- school2building.catchment[school2building.catchment$SCHOOL_ID %in% c(11241),]
View(s2b)
s2b$SCHOOL_ID <- 11240
s2b <- merge(s2b, schools[c(1,9)], by.x = "SCHOOL_ID", by.y = "ID", all.x = TRUE)
View(s2b)
school2building.catchment.complex.new <- rbind(school2building.catchment.complex.new, s2b)
school2building.catchment.complex <- school2building.catchment.complex.new
rm(s2b, school2building.catchment.complex.new, agg)
save.image()
savehistory()
write.csv(school2building.catchment.complex, "../csv/school2building/school2building.catchment.complex.csv", row.names = FALSE)
features.connection.catchment.complex <- generate.connection.features(buildings, schools, school.blocks, school2building.catchment.complex)
library("geosphere", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
features.connection.catchment.complex <- generate.connection.features(buildings, schools, school.blocks, school2building.catchment.complex)
View(features.connection.catchment.complex)
View(school2building.catchment.complex)
school2building.catchment.complex.add <- school2building.catchment.complex[school2building.catchment.complex$SCHOOL_ID > 9999,]
View(school2building.catchment.complex.add)
unique(school2building.catchment.complex.add$SCHOOL_ID)
complex.school2building = function(complex, schools, buildings, school2building) {
complex.school2building <- data.frame();
excludeIds <- c(10087, 10050, 10903, 11337, 10223, 10224, 10856, 10771, 10906, 11030,
11464, 11465, 11466, 11467,
10195, 11240, 11241)
for (cIdx in 1:nrow(complex)) {
cId <- complex$ID[cIdx];
sls <- schools[schools$COMPLEX_ID == cId,];
if (length(intersect(excludeIds, sls$ID)) != 0) {
next;
}
bIds <- unique(school2building[school2building$SCHOOL_ID %in% sls$ID,]$BUILDING_ID);
if (length(bIds) == 0) {
next;
}
for (sIdx in 1:nrow(sls)) {
sId <- sls$ID[sIdx];
df <- data.frame(BUILDING_ID = bIds);
df$SCHOOL_ID <- sId;
df$COMPLEX_ID <- cId;
complex.school2building <- rbind(complex.school2building, df);
}
print(paste(cIdx, " ", round((100*cIdx)/nrow(complex), digits = 2), "%", sep = ""));
}
complex.school2building <- complex.school2building[c(2,1,3)];
complex.school2building <- complex.school2building[order(complex.school2building$SCHOOL_ID),]
complex.school2building;
}
school2building.catchment.complex <- complex.school2building(complexes, schools, buildings, school2building.catchment)
View(school2building.catchment.complex)
school2building.catchment.complex <- rbind(school2building.catchment.complex, school2building.catchment.complex.add)
complex.school2building <- complex.school2building[order(complex.school2building$SCHOOL_ID),]
school2building.catchment.complex <- school2building.catchment.complex[order(school2building.catchment.complex$SCHOOL_ID),]
rownames(school2building.catchment.complex) <- NULL
View(school2building.catchment.complex)
rm(school2building.catchment.complex.add)
save.image()
savehistory()
write.csv(school2building.catchment.complex, "../csv/school2building/school2building.catchment.complex.csv", row.names = FALSE)
features.connection.catchment.complex <- generate.connection.features(buildings, schools, school.blocks, school2building.catchment.complex)
write.csv(features.connection.catchment.complex, "../csv/features/features.connection.catchment.complex.csv", row.names = FALSE)
save.image()
savehistory()
features.area.catchment.complex <- generate.area.features(buildings, schools, school.blocks, school2building.catchment.complex)
View(buildings)
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
View(buildings)
write.csv(features.area.catchment.complex, "../csv/features/features.area.catchment.complex.csv", row.names = FALSE)
save.image()
savehistory()
Sys.setlocale("LC_CTYPE", "ru_RU.UTF-8")
