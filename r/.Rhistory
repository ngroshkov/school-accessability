students <- buildings[buildings$ID == bId,]$STUDENTS;
schools.current.fill[schools.current.fill$ID==sId,]$CURRENT_FILL <- currentFill + students;
print(paste(s2bIdx, " ", round((100*s2bIdx)/nrow(school2building.dist), digits = 2), "%", sep = ""));
}
school2building.economic <- data.frame(SCHOOL_ID = result.school.ids, BUILDING_ID = result.building.ids);
calc.school2building.economic <- list(schools.current.fill, school2building.economic);
calc.school2building.economic;
}
aa <- calc.school2building.economic(buildings, schools, school2building.dist1, schools.current.fill, school2building.economic, minSchoolStudents = 500)
debugSource('/media/WORK/hse/school-accessibility/r/school2building_dist.R')
aa <- calc.school2building.economic(buildings, schools, school2building.dist1, schools.current.fill, school2building.economic, minSchoolStudents = 500)
school2building.dist1$S <- school2building.dist1$BUILDING_ID
school2building.dist1$BUILDING_ID <- school2building.dist1$SCHOOL_ID
school2building.dist1$SCHOOL_ID <- school2building.dist1$S
school2building.dist1$S <- NULL
school2building.dist2$S <- school2building.dist2$BUILDING_ID
school2building.dist2$BUILDING_ID <- school2building.dist2$SCHOOL_ID
school2building.dist2$SCHOOL_ID <- school2building.dist2$S
school2building.dist2$S <- NULL
View(school2building.dist1)
View(school2building.dist2)
save.image()
aa <- calc.school2building.economic(buildings, schools, school2building.dist1, schools.current.fill, school2building.economic, minSchoolStudents = 500)
aa <- calc.school2building.economic(buildings, schools, school2building.dist1, schools.current.fill, school2building.economic, minSchoolStudents = 500)
schools.current.fill1 <- aa[[1]]
school2building.economic1 <- aa[[2]]
View(schools.current.fill)
View(schools.current.fill1)
View(schools.current.fill)
schools.current.fill[schools.current.fill$CURRENT_FILL < 500, ]
nrow(schools.current.fill[schools.current.fill$CURRENT_FILL < 500, ])
nrow(schools.current.fill[schools.current.fill1$CURRENT_FILL < 500, ])
schools.current.fill1[schools.current.fill1$CURRENT_FILL < 500, ]
school2building.economic <- school2building.economic1
schools.current.fill <- schools.current.fill1
rm(schools.current.fill1, school2building.economic1,aa)
aa <- calc.school2building.economic(buildings, schools, school2building.dist2, schools.current.fill, school2building.economic, minSchoolStudents = 500)
schools.current.fill1 <- aa[[1]]
school2building.economic1 <- aa[[2]]
schools.current.fill1[schools.current.fill1$CURRENT_FILL < 500, ]
nrow(schools.current.fill[schools.current.fill1$CURRENT_FILL < 500, ])
schools.current.fill <- schools.current.fill1
school2building.economic <- school2building.economic1
rm(aa, school2building.economic1,schools.current.fill1)
rm(school2building.dist1,school2building.dist2)
save.image()
con <- dbConnect(MySQL(), user="root", password="Thisistheend", dbname="SCHOOL_ACCESSIBILITY", host="localhost")
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST ORDER BY DIST;")
school2building.dist <- fetch(rs, n=6000000)
write.csv(school2building.dist, "/media/WORK/hse/school2building-ord-dist6.csv", row.names = FALSE)
school2building.dist <- tail(school2building.dist, 3000000)
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
school2building.dist1 <- head(school2building.dist, 1000000)
school2building.dist3 <- tail(school2building.dist, 1000000)
school2building.dist2 <- head(tail(school2building.dist, 2000000),1000000)
View(school2building.dist1)
View(school2building.dist2)
View(school2building.dist3)
rm(school2building.dist)
school2building.dist1$S <- school2building.dist1$BUILDING_ID
school2building.dist1$BUILDING_ID <- school2building.dist1$SCHOOL_ID
school2building.dist1$SCHOOL_ID <- school2building.dist1$S
school2building.dist1$S <- NULL
school2building.dist2$S <- school2building.dist2$BUILDING_ID
school2building.dist2$BUILDING_ID <- school2building.dist2$SCHOOL_ID
school2building.dist2$SCHOOL_ID <- school2building.dist2$S
school2building.dist2$S <- NULL
school2building.dist3$S <- school2building.dist3$BUILDING_ID
school2building.dist3$BUILDING_ID <- school2building.dist3$SCHOOL_ID
school2building.dist3$SCHOOL_ID <- school2building.dist3$S
school2building.dist3$S <- NULL
View(school2building.dist1)
View(school2building.dist2)
View(school2building.dist3)
save.image()
aa <- calc.school2building.economic(buildings, schools, school2building.dist2, schools.current.fill, school2building.economic, minSchoolStudents = 500)
aa <- calc.school2building.economic(buildings, schools, school2building.dist1, schools.current.fill, school2building.economic, minSchoolStudents = 500)
school2building.dist2 <- rbind(school2building.dist2, school2building.dist3)
rm(school2building.dist3)
schools.current.fill1 <- aa[[1]]
school2building.economic1 <- aa[[2]]
schools.current.fill1[schools.current.fill1$CURRENT_FILL < 500, ]
nrow(schools.current.fill[schools.current.fill1$CURRENT_FILL < 500, ])
schools.current.fill <- schools.current.fill1
school2building.economic <- school2building.economic1
rm(schools.current.fill1, school2building.economic1,aa)
save.image()
aa <- calc.school2building.economic(buildings, schools, school2building.dist2, schools.current.fill, school2building.economic, minSchoolStudents = 500)
rm(aa)
rm(school2building.dist1, school2building.dist2)
rm(school2building.economic, schools.current.fill)
save.image()
school2building.dist1 <- read.csv("/media/WORK/hse/school2building-ord-dist1.csv", stringsAsFactors = FALSE)
school2building.dist3 <- read.csv("/media/WORK/hse/school2building-ord-dist3.csv", stringsAsFactors = FALSE)
school2building.dist6 <- read.csv("/media/WORK/hse/school2building-ord-dist6.csv", stringsAsFactors = FALSE)
school2building.dist <- rbind(school2building.dist1, school2building.dist3, school2building.dist6)
rm(school2building.dist1,school2building.dist3,school2building.dist6)
school2building.dist$ORD <- c[1:10000000]
a <- c[1:10000000]
rownames(school2building.dist)[5]
school2building.dist$ORD <- rownames(school2building.dist)
calc.school2building.economic <- function(buildings, schools, school2building.dist,
schools.current.fill, school2building.economic, minSchoolStudents = 500) {
if (is.null(schools.current.fill)) {
schools.current.fill <- data.frame(ID = schools$ID, CURRENT_FILL = 0);
}
result.school.ids <- integer();
result.building.ids <- integer();
if (!is.null(school2building.economic)) {
result.school.ids <- school2building.economic$SCHOOL_ID;
result.building.ids <- school2building.economic$BUILDING_ID;
}
#  for (s2bIdx in 1:nrow(school2building.dist)) {
while (nrow(school2building.dist) != 0) {
#    if (s2bIdx %% 100000 == 0) {
#      write.csv(data.frame(SCHOOL_ID = result.school.ids, BUILDING_ID = result.building.ids), "../csv/school2building-ecomomic.csv", row.names = FALSE);
#      write.csv(schools.current.fill, "../csv/schools-current-fill.csv", row.names = FALSE);
#    }
sId <- school2building.dist$SCHOOL_ID[1];
bId <- school2building.dist$BUILDING_ID[1];
if (bId %in% result.building.ids) {
next;
}
currentFill <- schools.current.fill[schools.current.fill$ID==sId,]$CURRENT_FILL[1];
if (currentFill >= minSchoolStudents) {
next;
}
result.school.ids <- c(result.school.ids, sId);
result.building.ids <- c(result.building.ids, bId);
school2building.dist <- school2building.dist[school2building.dist != bId];
students <- buildings[buildings$ID == bId,]$STUDENTS;
schools.current.fill[schools.current.fill$ID==sId,]$CURRENT_FILL <- currentFill + students;
print(paste(s2bIdx, " ", round((100*s2bIdx)/nrow(school2building.dist), digits = 2), "%", sep = ""));
}
school2building.economic <- data.frame(SCHOOL_ID = result.school.ids, BUILDING_ID = result.building.ids);
calc.school2building.economic <- list(schools.current.fill, school2building.economic);
calc.school2building.economic;
}
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill, school2building.economic, minSchoolStudents = 500)
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill = NULL, school2building.economic = NULL, minSchoolStudents = 500)
calc.school2building.economic <- function(buildings, schools, school2building.dist,
schools.current.fill, school2building.economic, minSchoolStudents = 500) {
if (is.null(schools.current.fill)) {
schools.current.fill <- data.frame(ID = schools$ID, CURRENT_FILL = 0);
}
result.school.ids <- integer();
result.building.ids <- integer();
if (!is.null(school2building.economic)) {
result.school.ids <- school2building.economic$SCHOOL_ID;
result.building.ids <- school2building.economic$BUILDING_ID;
}
#  for (s2bIdx in 1:nrow(school2building.dist)) {
while (nrow(school2building.dist) != 0) {
#    if (s2bIdx %% 100000 == 0) {
#      write.csv(data.frame(SCHOOL_ID = result.school.ids, BUILDING_ID = result.building.ids), "../csv/school2building-ecomomic.csv", row.names = FALSE);
#      write.csv(schools.current.fill, "../csv/schools-current-fill.csv", row.names = FALSE);
#    }
sId <- school2building.dist$SCHOOL_ID[1];
bId <- school2building.dist$BUILDING_ID[1];
if (bId %in% result.building.ids) {
next;
}
currentFill <- schools.current.fill[schools.current.fill$ID==sId,]$CURRENT_FILL[1];
if (currentFill >= minSchoolStudents) {
next;
}
result.school.ids <- c(result.school.ids, sId);
result.building.ids <- c(result.building.ids, bId);
school2building.dist <- school2building.dist[school2building.dist != bId];
students <- buildings[buildings$ID == bId,]$STUDENTS;
schools.current.fill[schools.current.fill$ID==sId,]$CURRENT_FILL <- currentFill + students;
print(nrow(school2building.dist));
#    print(paste(s2bIdx, " ", round((100*s2bIdx)/nrow(school2building.dist), digits = 2), "%", sep = ""));
}
school2building.economic <- data.frame(SCHOOL_ID = result.school.ids, BUILDING_ID = result.building.ids);
calc.school2building.economic <- list(schools.current.fill, school2building.economic);
calc.school2building.economic;
}
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill = NULL, school2building.economic = NULL, minSchoolStudents = 500)
calc.school2building.economic <- function(buildings, schools, school2building.dist,
schools.current.fill, school2building.economic, minSchoolStudents = 500) {
if (is.null(schools.current.fill)) {
schools.current.fill <- data.frame(ID = schools$ID, CURRENT_FILL = 0);
}
result.school.ids <- integer();
result.building.ids <- integer();
if (!is.null(school2building.economic)) {
result.school.ids <- school2building.economic$SCHOOL_ID;
result.building.ids <- school2building.economic$BUILDING_ID;
}
for (s2bIdx in 1:nrow(school2building.dist)) {
#    if (s2bIdx %% 100000 == 0) {
#      write.csv(data.frame(SCHOOL_ID = result.school.ids, BUILDING_ID = result.building.ids), "../csv/school2building-ecomomic.csv", row.names = FALSE);
#      write.csv(schools.current.fill, "../csv/schools-current-fill.csv", row.names = FALSE);
#    }
sId <- school2building.dist$SCHOOL_ID[s2bIdx];
bId <- school2building.dist$BUILDING_ID[s2bIdx];
if (bId %in% result.building.ids) {
next;
}
currentFill <- schools.current.fill[schools.current.fill$ID==sId,]$CURRENT_FILL[1];
if (currentFill >= minSchoolStudents) {
next;
}
result.school.ids <- c(result.school.ids, sId);
result.building.ids <- c(result.building.ids, bId);
students <- buildings[buildings$ID == bId,]$STUDENTS;
schools.current.fill[schools.current.fill$ID==sId,]$CURRENT_FILL <- currentFill + students;
print(paste(s2bIdx, " ", round((100*s2bIdx)/nrow(school2building.dist), digits = 2), "%", sep = ""));
}
school2building.economic <- data.frame(SCHOOL_ID = result.school.ids, BUILDING_ID = result.building.ids);
calc.school2building.economic <- list(schools.current.fill, school2building.economic);
calc.school2building.economic;
}
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill = NULL, school2building.economic = NULL, minSchoolStudents = 500)
school2building.dist <- read.csv("/media/WORK/hse/school2building-ord-dist6.csv", stringsAsFactors = FALSE)
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill = NULL, school2building.economic = NULL, minSchoolStudents = 500)
schools.current.fill <- aa[[1]]
school2building.economic <- aa[[2]]
schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]
rm(school2building.dist, aa)
save.image()
con <- dbConnect(MySQL(), user="root", password="Thisistheend", dbname="SCHOOL_ACCESSIBILITY", host="localhost")
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST ORDER BY DIST;")
fetch(rs, n=6000000)
school2building.dist <- fetch(rs, n=4000000)
write.csv(school2building.dist, "/media/WORK/hse/school2building-ord-dist10.csv", row.names = FALSE)
school2building.dist$ORD <- c[1:4000000]
school2building.dist$ORD <- rownames(school2building.dist)
school2building.dist$S <- school2building.dist$BUILDING_ID
school2building.dist$BUILDING_ID <- school2building.dist$SCHOOL_ID
school2building.dist$SCHOOL_ID <- school2building.dist$S
school2building.dist$S <- NULL
schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]$SCHOOL_ID
schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]
schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]$ID
school2building.dist1 <- school2building.dist[school2building.dist$SCHOOL_ID %in% schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]$ID,]
school2building.dist <- school2building.dist[school2building.dist$SCHOOL_ID %in% schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]$ID,]
rm(school2building.dist1)
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill, school2building.economic, minSchoolStudents = 500)
View(school2building.dist)
schools.current.fill1 <- aa[[1]]
school2building.economic1 <- aa[[2]]
schools.current.fill1[schools.current.fill1$CURRENT_FILL < 500,]
schools.current.fill <- aa[[1]]
school2building.economic <- aa[[2]]
rm(schools.current.fill1, school2building.economic1,aa)
save.image()
school2building.dist <- fetch(rs, n=4000000)
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
con <- dbConnect(MySQL(), user="root", password="Thisistheend", dbname="SCHOOL_ACCESSIBILITY", host="localhost")
schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]
schools.current.fill[schools.current.fill$CURRENT_FILL < 500,]$ID
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST WHERE BUILDING_ID IN (10118,10208,10209,10210,10211,10368,10480,10532,10618,10749,10837,10843,10984,10985,10986,10987,11021,11091,11170) AND DIST > 9287 ORDER BY DIST;")
school2building.dist <- fetch(rs, n=662394)
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
View(school2building.dist)
school2building.dist$S <- school2building.dist$BUILDING_ID
school2building.dist$BUILDING_ID <- school2building.dist$SCHOOL_ID
school2building.dist$SCHOOL_ID <- school2building.dist$S
school2building.dist$S <- NULL
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill, school2building.economic, minSchoolStudents = 500)
View(school2building.economic)
school2building.dist1 <- school2building.dist[!school2building.dist$BUILDING_ID %in% school2building.economic$BUILDING_ID,]
View(school2building.dist1)
school2building.economic[school2building.economic$BUILDING_ID == 10447,]
school2building.dist <- school2building.dist[!school2building.dist$BUILDING_ID %in% school2building.economic$BUILDING_ID,]
aa <- calc.school2building.economic(buildings, schools, school2building.dist, schools.current.fill, school2building.economic, minSchoolStudents = 500)
View(school2building.dist)
schools.current.fill1 <- aa[[1]]
school2building.economic1 <- aa[[2]]
schools.current.fill1[schools.current.fill1$CURRENT_FILL < 500,]
schools.current.fill <- aa[[1]]
school2building.economic <- aa[[2]]
save.image()
rm(schools.current.fill1, school2building.economic1)
rm(school2building.dist1)
save.image()
schools.current.fill <- schools.current.fill[order(schools.current.fill$CURRENT_FILL),]
View(schools.current.fill)
rm(schools.current.fill, school2building.dist)
save.image()
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
con <- dbConnect(MySQL(), user="root", password="Thisistheend", dbname="SCHOOL_ACCESSIBILITY", host="localhost")
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST WHERE DIST <= 500;")
school2building.r500 <- fetch(rs, n=68190)
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST WHERE DIST <= 500;")
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
con <- dbConnect(MySQL(), user="root", password="Thisistheend", dbname="SCHOOL_ACCESSIBILITY", host="localhost")
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST WHERE DIST <= 500;")
school2building.r500 <- fetch(rs, n=68190)
school2building.r500$S <- school2building.r500$BUILDING_ID
school2building.r500$BUILDING_ID <- school2building.r500$SCHOOL_ID
school2building.r500$SCHOOL_ID <- school2building.r500$S
school2building.r500$S <- NULL
View(school2building.r500)
save.image()
rm(aa)
save.image()
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
con <- dbConnect(MySQL(), user="root", password="Thisistheend", dbname="SCHOOL_ACCESSIBILITY", host="localhost")
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST WHERE DIST <= 800;")
school2building.r800 <- fetch(rs, n=149226)
school2building.r800$S <- school2building.r800$BUILDING_ID
school2building.r800$BUILDING_ID <- school2building.r800$SCHOOL_ID
school2building.r800$SCHOOL_ID <- school2building.r800$S
school2building.r800$S <- NULL
save.image()
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
con <- dbConnect(MySQL(), user="root", password="Thisistheend", dbname="SCHOOL_ACCESSIBILITY", host="localhost")
rs <- dbSendQuery(con, "SELECT * FROM SCHOOL2BUILDING_DIST WHERE DIST <= 1000;")
school2building.r1000 <- fetch(rs, n=215812)
dbHasCompleted(rs);dbClearResult(rs);dbDisconnect(con);
school2building.r1000$S <- school2building.r1000$BUILDING_ID
school2building.r1000$BUILDING_ID <- school2building.r1000$SCHOOL_ID
school2building.r1000$SCHOOL_ID <- school2building.r1000$S
school2building.r1000$S <- NULL
save.image()
rm(con, rs)
rm(calc.dist.for.school2building, calc.school2building.economic)
save.image()
savehistory()
write.csv(school2building.economic, "../csv/school2building-economic.csv", row.names = FALSE, na = "")
write.csv(school2building.r500, "../csv/school2building-r500.csv", row.names = FALSE, na = "")
write.csv(school2building.r800, "../csv/school2building-r800.csv", row.names = FALSE, na = "")
write.csv(school2building.r1000, "../csv/school2building-r1000.csv", row.names = FALSE, na = "")
save.image()
features.area.economic <- generate.area.features(buildings, schools, school.blocks, school2building.economic)
save.image()
school2building.r500 <- school2building.r500[c(2,1,3)]
school2building.r800 <- school2building.r800[c(2,1,3)]
school2building.r1000 <- school2building.r1000[c(2,1,3)]
save.image()
write.csv(school2building.r500, "../csv/school2building-r500.csv", row.names = FALSE, na = "")
write.csv(school2building.r800, "../csv/school2building-r800.csv", row.names = FALSE, na = "")
write.csv(school2building.r1000, "../csv/school2building-r1000.csv", row.names = FALSE, na = "")
features.connection.economic <- generate.connection.features(buildings, schools, school.blocks, school2building.economic)
save.image()
write.csv(features.area.economic, "../csv/features.area.economic.csv", row.names = FALSE)
write.csv(features.connection.economic, "../csv/features.connection.economic.csv", row.names = FALSE)
features.connection.r500 <- generate.connection.features(buildings, schools, school.blocks, school2building.r500)
write.csv(features.connection.r500, "../csv/features.connection.r500.csv", row.names = FALSE)
save.image()
features.connection.r800 <- generate.connection.features(buildings, schools, school.blocks, school2building.r800)
write.csv(features.connection.r800, "../csv/features.connection.r800.csv", row.names = FALSE)
save.image()
features.connection.r1000 <- generate.connection.features(buildings, schools, school.blocks, school2building.r1000)
write.csv(features.connection.r1000, "../csv/features.connection.r1000.csv", row.names = FALSE)
save.image()
savehistory()
View(districts)
districts$NAME <- rownames(districts)
rownames(districts) <- NULL
districts$OKRUG <- districts$okrug
districts$okrug <- NULL
districts <- districts[c(6,7,1,2,3,4,5)]
save.image()
savehistory()
districts$MEAN_STUDENTS_PER_SCHOOL <- districts$students_per_school_mean
districts$students_per_school_mean <- NULL
agg <- aggregate(buildings$DISTRICT, list(DISTRICT_ID = buildings$DISTRICT_ID), first)
agg <- aggregate(buildings, list(buildings$DISTRICT_ID), FUN=head, 1)
View(agg)
agg$ID <- agg$Group.1
agg$Group.1 <- NULL
agg$ADDRESS <- NULL
agg$BTI_OBJECTID <- NULL
agg$OPL_G <- NULL
agg$POPUL <- NULL
agg$STUDENTS <- NULL
agg$DISTRICT_ID <- NULL
agg$OKRUG <- NULL
agg <- agg[c(1,2)]
districts1 <- merge(districts, agg, by.x = "NAME", by.y = "DISTRICT")
View(districts1)
districts1 <- districts1[c(8,1:7)]
districts1 <- districts
districts1 <- merge(districts, agg, by.x = "NAME", by.y = "DISTRICT")
districts1 <- districts1[c(8,1:7)]
districts <- districts1
rm(districts1)
districts <- districts[c(1,2,7,3,4,5,6)]
View(districts)
savehistory()
agg <- aggregate(buildings, list(buildings$DISTRICT_ID), FUN=head, 1)
agg$ID <- agg$Group.1
agg <- agg[c(2,9)]
districts1 <- merge(districts, agg, by.x = "NAME", by.y = "DISTRICT")
districts1$MEAN_STUDENTS_PER_SCHOOL <- districts1$students_per_school_mean
districts1 <- districts1[c(8,1,2,9,4,5,6,7)]
View(districts1)
districts <- districts1
rm(districts1,agg)
save.image()
buildings1 <- buildings[!buildings$ID %in% school2building.r500$BUILDING_ID,]
agg <- aggregate(buildings1$STUDENTS, list(buildings1$DISTRICT_ID), sum)
View(agg)
agg$ID <- agg$Group.1
agg$NOT_ACCESSIBLE_AREA_BY_RADIUS <- agg$x
agg <- agg[c(3,4)]
districts1 <- merge(districts, agg, by = "ID", all.x = TRUE)
View(districts1)
districts1 <- districts1[c(1,2,3,4,9,5,6,7,8)]
View(districts1)
districts1$NOT_ACCESSIBLE_AREA_BY_RADIUS <- sapply(districts1$NOT_ACCESSIBLE_AREA_BY_RADIUS, {function(x) ifelse(is.na(x),0,x)})
districts1$not_accessible_area_by_radius <- NULL
districts <- districts1
rm(districts1, agg, buildings1)
save.image()
savehistory()
scat_not_accessible_students_by_radius_ON_students_per_school_mean <- ggplot(districts, aes(x=districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, y=districts$MEAN_STUDENTS_PER_SCHOOL)) +
geom_point(aes(color=cut(districts$MEAN_STUDENTS_PER_SCHOOL, breaks=seq(99, 999, by = 100)), size=4)) +
#geom_text(aes(label=rownames(districts)), colour="black", size=3, hjust=-0.1, vjust=0) +
scale_colour_manual("", values=colors_students_per_school_mean) +
#scale_colour_manual(values = c("red","green")) +
scale_x_continuous(limits = c(min(districts$NOT_ACCESSIBLE_AREA_BY_RADIUS), max(districts$NOT_ACCESSIBLE_AREA_BY_RADIUS) + 0.0001)) +
scale_y_continuous(limits = c(0, max(districts$MEAN_STUDENTS_PER_SCHOOL))) +
theme(legend.position="none") +
geom_smooth(method=lm) +
geom_text(aes(x = 2000, y = 1050, label = lm_eqn(districts, districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, districts$MEAN_STUDENTS_PER_SCHOOL)), parse = TRUE, family="serif", fontface="italic", size=16) +
#geom_text(aes(x = districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, y = districts$MEAN_STUDENTS_PER_SCHOOL, label = not_accessible_students_by_radius_percent_eqn(data)), parse = TRUE) +
xlab("Число школьников, проживающих дальше 500 м \n от ближайшей школы") +
ylab("Среднее число обучающихся на одну школу");
scat_not_accessible_students_by_radius_ON_students_per_school_mean
scat_not_accessible_students_by_radius_ON_students_per_school_mean <- ggplot(districts, aes(x=districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, y=districts$MEAN_STUDENTS_PER_SCHOOL)) +
geom_point(aes(color=cut(districts$MEAN_STUDENTS_PER_SCHOOL, breaks=seq(99, 999, by = 100)), size=4)) +
#geom_text(aes(label=rownames(districts)), colour="black", size=3, hjust=-0.1, vjust=0) +
scale_colour_manual("", values=colors_students_per_school_mean) +
#scale_colour_manual(values = c("red","green")) +
scale_x_continuous(limits = c(min(districts$NOT_ACCESSIBLE_AREA_BY_RADIUS), max(districts$NOT_ACCESSIBLE_AREA_BY_RADIUS) + 0.0001)) +
scale_y_continuous(limits = c(0, max(districts$MEAN_STUDENTS_PER_SCHOOL))) +
#theme(legend.position="none") +
#geom_smooth(method=lm) +
#geom_text(aes(x = 2000, y = 1050, label = lm_eqn(districts, districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, districts$MEAN_STUDENTS_PER_SCHOOL)), parse = TRUE, family="serif", fontface="italic", size=16) +
#geom_text(aes(x = districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, y = districts$MEAN_STUDENTS_PER_SCHOOL, label = not_accessible_students_by_radius_percent_eqn(data)), parse = TRUE) +
xlab("Число школьников, проживающих дальше 500 м \n от ближайшей школы") +
ylab("Среднее число обучающихся на одну школу");
scat_not_accessible_students_by_radius_ON_students_per_school_mean
scat_not_accessible_students_by_radius_ON_students_per_school_mean <- ggplot(districts, aes(x=districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, y=districts$MEAN_STUDENTS_PER_SCHOOL)) +
geom_point(aes(color=cut(districts$MEAN_STUDENTS_PER_SCHOOL, breaks=seq(99, 999, by = 100)), size=4)) +
#geom_text(aes(label=rownames(districts)), colour="black", size=3, hjust=-0.1, vjust=0) +
scale_colour_manual("", values=colors_students_per_school_mean) +
#scale_colour_manual(values = c("red","green")) +
scale_x_continuous(limits = c(min(districts$NOT_ACCESSIBLE_AREA_BY_RADIUS), max(districts$NOT_ACCESSIBLE_AREA_BY_RADIUS) + 0.0001)) +
scale_y_continuous(limits = c(0, max(districts$MEAN_STUDENTS_PER_SCHOOL))) +
theme(legend.position="none") +
geom_smooth(method=lm) +
#geom_text(aes(x = 2000, y = 1050, label = lm_eqn(districts, districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, districts$MEAN_STUDENTS_PER_SCHOOL)), parse = TRUE, family="serif", fontface="italic", size=16) +
#geom_text(aes(x = districts$NOT_ACCESSIBLE_AREA_BY_RADIUS, y = districts$MEAN_STUDENTS_PER_SCHOOL, label = not_accessible_students_by_radius_percent_eqn(data)), parse = TRUE) +
xlab("Число школьников, проживающих дальше 500 м \n от ближайшей школы") +
ylab("Среднее число обучающихся на одну школу");
scat_not_accessible_students_by_radius_ON_students_per_school_mean
save.image()
savehistory()
buildings1 <- buildings[buildings$ID %in% school2building.r500$BUILDING_ID,]
agg <- aggregate(buildings1$STUDENTS, list(ID=buildings1$DISTRICT_ID), sum)
View(agg)
agg$ACCESSIBLE_AREA_BY_RADIUS <- agg$x
agg$x <- NULL
districts1 <- merge(districts, agg, by = "ID", all.x = TRUE)
View(districts1)
districts1 <- districts1[c(1,2,3,4,5,9,6,7,8)]
districts1 <- districts1[c(1,2,3,4,6,5,7,8,9)]
districts <- districts1
rm(districts1,agg,buildings1)
scat_accessible_students_by_radius_ON_students_per_school_mean <- ggplot(districts, aes(x=districts$ACCESSIBLE_AREA_BY_RADIUS, y=districts$MEAN_STUDENTS_PER_SCHOOL)) +
geom_point(aes(color=cut(districts$MEAN_STUDENTS_PER_SCHOOL, breaks=seq(99, 999, by = 100)), size=4)) +
#geom_text(aes(label=rownames(districts)), colour="black", size=3, hjust=-0.1, vjust=0) +
scale_colour_manual("", values=colors_students_per_school_mean) +
#scale_colour_manual(values = c("red","green")) +
scale_x_continuous(limits = c(min(districts$ACCESSIBLE_AREA_BY_RADIUS), max(districts$ACCESSIBLE_AREA_BY_RADIUS) + 0.0001)) +
scale_y_continuous(limits = c(0, max(districts$MEAN_STUDENTS_PER_SCHOOL))) +
theme(legend.position="none") +
geom_smooth(method=lm) +
#geom_text(aes(x = 2000, y = 1050, label = lm_eqn(districts, districts$ACCESSIBLE_AREA_BY_RADIUS, districts$MEAN_STUDENTS_PER_SCHOOL)), parse = TRUE, family="serif", fontface="italic", size=16) +
#geom_text(aes(x = districts$ACCESSIBLE_AREA_BY_RADIUS, y = districts$MEAN_STUDENTS_PER_SCHOOL, label = not_accessible_students_by_radius_percent_eqn(data)), parse = TRUE) +
xlab("Число школьников, проживающих в пределах 500 м \n от школы") +
ylab("Среднее число обучающихся на одну школу");
scat_accessible_students_by_radius_ON_students_per_school_mean
save.image()
d <- read.csv("../csv/districts.csv", stringsAsFactors = FALSE)
View(d)
d <- read.csv("../csv/districts.csv", stringsAsFactors = FALSE)
d <- read.csv("../csv/districts.csv", stringsAsFactors = FALSE)
d[!d$ID %in% districts$ID,]
d <- read.csv("../csv/districts.csv", stringsAsFactors = FALSE)
d$MEAN_STUDENTS_PER_SCHOOL <- d$STUDENTS/d$SCHOOLS
View(d)
d <- d[order(d$ID),]
View(d)
buildings1 <- buildings[buildings$ID %in% school2building.r500$BUILDING_ID,]
agg <- aggregate(buildings1$STUDENTS, list(ID=buildings1$DISTRICT_ID), sum)
d1 <- merge(d, agg, by = "ID", all.x = TRUE)
View(d1)
d1$ACCESSIBLE_AREA_BY_RADIUS <- d1$x
d1$x <- NULL
buildings1 <- buildings[!buildings$ID %in% school2building.r500$BUILDING_ID,]
agg <- aggregate(buildings1$STUDENTS, list(ID=buildings1$DISTRICT_ID), sum)
d <- d1
d1 <- merge(d, agg, by = "ID", all.x = TRUE)
View(d1)
d1$NON_ACCESSIBLE_AREA_BY_RADIUS <- d1$x
d1$x <- NULL
View(d)
View(d1)
d <- d1
rm(d1)
d$NOT_ACCESSIBLE_AREA_BY_RADIUS <- sapply(d$NOT_ACCESSIBLE_AREA_BY_RADIUS, {function(x) ifelse(is.na(x),0,x)})
d$NON_ACCESSIBLE_AREA_BY_RADIUS <- sapply(d$NON_ACCESSIBLE_AREA_BY_RADIUS, {function(x) ifelse(is.na(x),0,x)})
rm(agg, buildings1)
save.image()
savehistory()
