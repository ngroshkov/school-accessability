for (sId in schoolIds) {
sblks <- school.blocks[school.blocks$SCHOOL_ID == sId,];
closeBuildings <- numeric();
for (sblkIdx in 1:nrow(sblks)) {
sblk <- sblks[sblkIdx,];
sblkP <- c(sblk$POINT_X[1],sblk$POINT_Y[1]);
dist1 <- distVincentyEllipsoid(p1, sblkP);
dist2 <- distVincentyEllipsoid(p2, sblkP);
newId <- if (dist1 < dist2) newId1 else newId2;
closeBuildings <- c(closeBuildings, newId);
};
closeBuildings <- unique(closeBuildings);
s2b <- data.frame(OBJECTID = NA, BUILDING_ID = id, SCHOOL_ID = sId, NEW_BUILDING_ID=closeBuildings);
generate.school2buildings.for.far.doubles <- rbind(generate.school2buildings.for.far.doubles, s2b);
};
generate.school2buildings.for.far.doubles;
};
}
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
generate.school2buildings.for.far.doubles <- function(agg.double, buildings, school2building, schools, school.blocks) {
generate.school2buildings.for.far.doubles <- data.frame();
for (bIdx in 1:nrow(agg.double)) {
id <- agg.double$ID[bIdx];
builds <- buildings[buildings$ID == id,]
newId1 <- builds$NEW_ID[1];
newId2 <- builds$NEW_ID[2];
p1 <- c(builds$POINT_X[1], builds$POINT_Y[1]);
p2 <- c(builds$POINT_X[2], builds$POINT_Y[2]);
schoolIds <- unique(school2building[school2building$BUILDING_ID == id,]$SCHOOL_ID);
schoolIds <- schools[schools$ID %in% schoolIds,]$SCHOOL_ID;
for (sId in schoolIds) {
sblks <- school.blocks[school.blocks$SCHOOL_ID == sId,];
closeBuildings <- numeric();
for (sblkIdx in 1:nrow(sblks)) {
sblk <- sblks[sblkIdx,];
sblkP <- c(sblk$POINT_X[1],sblk$POINT_Y[1]);
dist1 <- distVincentyEllipsoid(p1, sblkP);
dist2 <- distVincentyEllipsoid(p2, sblkP);
newId <- if (dist1 < dist2) newId1 else newId2;
closeBuildings <- c(closeBuildings, newId);
};
closeBuildings <- unique(closeBuildings);
s2b <- data.frame(OBJECTID = NA, BUILDING_ID = id, SCHOOL_ID = sId, NEW_BUILDING_ID=closeBuildings);
generate.school2buildings.for.far.doubles <- rbind(generate.school2buildings.for.far.doubles, s2b);
print(paste(bIdx, " ", round((100*bIdx)/nrow(agg.double), digits = 2), "%", sep = ""));
};
generate.school2buildings.for.far.doubles;
};
}
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
school2building.to.add
generate.school2buildings.for.far.doubles <- function(agg.double, buildings, school2building, schools, school.blocks) {
generate.school2buildings.for.far.doubles <- data.frame();
for (bIdx in 1:nrow(agg.double)) {
id <- agg.double$ID[bIdx];
builds <- buildings[buildings$ID == id,]
newId1 <- builds$NEW_ID[1];
newId2 <- builds$NEW_ID[2];
p1 <- c(builds$POINT_X[1], builds$POINT_Y[1]);
p2 <- c(builds$POINT_X[2], builds$POINT_Y[2]);
schoolIds <- unique(school2building[school2building$BUILDING_ID == id,]$SCHOOL_ID);
schoolIds <- schools[schools$ID %in% schoolIds,]$SCHOOL_ID;
for (sId in schoolIds) {
sblks <- school.blocks[school.blocks$SCHOOL_ID == sId,];
closeBuildings <- numeric();
for (sblkIdx in 1:nrow(sblks)) {
sblk <- sblks[sblkIdx,];
sblkP <- c(sblk$POINT_X[1],sblk$POINT_Y[1]);
dist1 <- distVincentyEllipsoid(p1, sblkP);
dist2 <- distVincentyEllipsoid(p2, sblkP);
newId <- if (dist1 < dist2) newId1 else newId2;
closeBuildings <- c(closeBuildings, newId);
};
closeBuildings <- unique(closeBuildings);
s2b <- data.frame(OBJECTID = NA, BUILDING_ID = id, SCHOOL_ID = sId, NEW_BUILDING_ID=closeBuildings);
generate.school2buildings.for.far.doubles <- rbind(generate.school2buildings.for.far.doubles, s2b);
};
print(paste(bIdx, " ", round((100*bIdx)/nrow(agg.double), digits = 2), "%", sep = ""));
};
generate.school2buildings.for.far.doubles;
}
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
debugSource('/media/WORK/hse/school-accessibility/r/generate_school_id.R')
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
schools[schools$ID %in% schoolIds,]$SCHOOL_ID
schools[schools$ID %in% schoolIds,]
schools[schools$ID %in% schoolIds,]$ID
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
debugSource('/media/WORK/hse/school-accessibility/r/generate_school_id.R')
debugSource('/media/WORK/hse/school-accessibility/r/generate_school_id.R')
debugSource('/media/WORK/hse/school-accessibility/r/generate_school_id.R')
debugSource('/media/WORK/hse/school-accessibility/r/generate_school_id.R')
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
View(s2b)
View(generate.school2buildings.for.far.doubles)
View(s2b)
View(s2b)
View(generate.school2buildings.for.far.doubles)
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
View(school2building.to.add)
debugSource('/media/WORK/hse/school-accessibility/r/generate_school_id.R')
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
school2building[school2building$BUILDING_ID == id,]
school2building[school2building$BUILDING_ID == id,]$SCHOOL_ID
schools[schools$ID %in% schoolIds,]$ID
View(sblk)
View(sblks)
p1
p2
sblkP
View(school.blocks)
school.blocks.from.arcmap <- read.csv("../csv/schools_blocks_from_arcmap.csv")
View(school.blocks.from.arcmap)
school.blocks$POINT_X <- NULL
school.blocks$POINT_Y <- NULL
View(school.blocks)
school.blocks.new <- merge(school.blocks, school.blocks.from.arcmap, by = "ID")
View(school.blocks.new)
school.blocks.new <- school.blocks.new[c(9,1,2,3,4,5,6,7,8,10,11)]
school.blocks <- school.blocks.new
rm(school.blocks.new, school.blocks.from.arcmap)
View(school.blocks)
save.image()
school2building.to.add <- generate.school2buildings.for.far.doubles(agg.double, buildings, school2building, schools, school.blocks)
source('/media/WORK/hse/school-accessibility/r/generate_school_id.R')
View(school2building.to.add)
school2building.new1 <- rbind(school2building.new, school2building.to.add)
school2building.new <- rbind(school2building.new, school2building.to.add)
rm(school2building.new1, school2building.to.add)
save.image()
school2building.new1 <- school2building.new
row.names(school2building.new1) <- NULL
View(school2building.new1)
school2building.new <- school2building.new1
rm(school2building.new1)
rm(school2building.old.new)
rm(buildings.multiple, buildings.single)
save.image()
school2building.old2 <- school2building
school2building <- school2building.new
rm(school2building.new)
save.image()
View(school2building)
View(buildings)
View(schools)
View(complexes)
View(school.blocks)
buildings$OLD_ID <- buildings$ID
buildings$ID <- buildings$NEW_ID
View(buildings)
buildings$NEW_ID <- NULL
View(buildings)
buildings1 <- buildings[c(1,17,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)]
View(buildings1)
buildings  <- buildings[c(1,17,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)]
rm(buildings1)
View(buildings)
save.image()
school2building$OBJECTID <- NULL
View(school2building)
school2building$OLD_BUILDING_ID <- school2building$BUILDING_ID
View(school2building)
school2building$BUILDING_ID <- school2building$NEW_BUILDING_ID
View(school2building)
school2building$NEW_BUILDING_ID <- NULL
View(school2building)
school2building1 <- school2building[c(2,3,1)]
View(school2building1)
school2building <- school2building[c(2,3,1)]
rm(school2building1)
View(school2building)
View(schools)
View(buildings)
View(schools)
View(complexes)
write.csv(complexes, "../csv/complexes.csv", row.names = FALSE, na = "")
write.csv(complexes, "../csv/complexes.csv", row.names = FALSE, na = "")
complexes[complexes$OBJECTID=637,]
complexes[complexes$OBJECTID==637,]
complexes[complexes$ID==958,]
write.csv(complexes, "../csv/complexes.csv", row.names = FALSE, na = "")
write.csv(schools, "../csv/schools.csv", row.names = FALSE, na = "")
write.csv(school.blocks, "../csv/school.blocks.csv", row.names = FALSE, na = "")
write.csv(school2building, "../csv/school2building.csv", row.names = FALSE, na = "")
write.csv(buildings, "../csv/buildings.csv", row.names = FALSE, na = "")
save.image()
savehistory()
unique(buildings$ID)
lenth(unique(buildings$ID))
length(unique(buildings$ID))
sum(buildings$STUDENTS)
View(districts)
View(assigned.area.best.school.ids)
rm(assigned.area.best.school.ids())
rm(assigned.area.best.school.ids)
rm(building2school.generate.new.building.id)
rm(building2school.generate.new.school.id)
rm(building2school.new)
rm(calc.distance.between.buildings.double)
rm(calc.same.opl)
rm(complex.size)
rm(distances)
rm(ggenerate.school2buildings.for.close.doubles)
rm(generate.school2buildings.for.close.doubles)
rm(generate.school2buildings.for.far.doubles)
rm(radiuses)
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25, stat="identity") +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(x =cut(schools$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
View(schools.old)
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools.old$r500)) +
geom_histogram(aes(fill=cut(schools.old$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools.old, aes(x=schools.old$r500)) +
geom_histogram(aes(fill=cut(schools.old$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools.old, aes(x=schools.old$r500)) +
geom_histogram(aes(fill=cut(schools.old$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_800_students <- ggplot(schools.old, aes(x=schools.old$r800)) +
geom_histogram(aes(fill=cut(schools.old$r800, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 800 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_1000_students <- ggplot(schools.old, aes(x=schools.old$r1000)) +
geom_histogram(aes(fill=cut(schools.old$r1000, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 1000 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_800_students
freqhist_school_rad_for_1000_students
freqhist_asarea_students <- ggplot(schools, aes(x=schools$Ar1000)) +
;
freqhist_asarea_students <- ggplot(schools, aes(x=schools$ASSIGNMENT_AREA_STUDENTS)) +
geom_histogram(aes(fill=cut(schools$ASSIGNMENT_AREA_STUDENTS, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Школьники в закрепленной территории", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_asarea_students
max(schools$ASSIGNMENT_AREA_STUDENTS)
freqhist_asarea_students <- ggplot(schools, aes(x=schools$ASSIGNMENT_AREA_STUDENTS)) +
geom_histogram(aes(fill=cut(schools$ASSIGNMENT_AREA_STUDENTS, breaks=seq(999, 49999, by = 1000))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Школьники в закрепленной территории", breaks=seq(0, 50000, by = 1000), limits=c(0, 50000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_asarea_students
freqhist_asarea_students
sId <- school.blocks$POINT_X[sbIdx];
s500 <- c(s500, sId);
school.choice.radius <- function(buildings, school.blocks) {
s500count <- integer();
s800count <- integer();
s1000count <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
p <- c(builds$POINT_X[bIdx], builds$POINT_Y[bIdx]);
s500 <- numeric();
s800 <- numeric();
s1000 <- numeric();
for (sbIdx in 1:nrow(school.blocks)) {
sId <- school.blocks$SCHOOL_ID[sbIdx];
sp <- c(school.blocks$POINT_X[sbIdx], school.blocks$POINT_Y[sbIdx]);
dist <- distVincentyEllipsoid(p, sp);
if (dist <= 500) {
s500 <- c(s500, sId);
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 800) {
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 1000) {
s1000 <- c(s1000, sId);
}
};
s500count <- c(s500count, length(unique(s500)));
s800count <- c(s800count, length(unique(s800)));
s1000count <- c(s1000count, length(unique(s1000)));
};
school.choice.radius <- data.frame(S500 = s500count, S800 = s800count, S1000 = s1000count);
}
scr <- school.choice.radius(buildings, school.blocks)
school.choice.radius <- function(buildings, school.blocks) {
s500count <- integer();
s800count <- integer();
s1000count <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
p <- c(buildings$POINT_X[bIdx], buildings$POINT_Y[bIdx]);
s500 <- numeric();
s800 <- numeric();
s1000 <- numeric();
for (sbIdx in 1:nrow(school.blocks)) {
sId <- school.blocks$SCHOOL_ID[sbIdx];
sp <- c(school.blocks$POINT_X[sbIdx], school.blocks$POINT_Y[sbIdx]);
dist <- distVincentyEllipsoid(p, sp);
if (dist <= 500) {
s500 <- c(s500, sId);
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 800) {
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 1000) {
s1000 <- c(s1000, sId);
}
};
s500count <- c(s500count, length(unique(s500)));
s800count <- c(s800count, length(unique(s800)));
s1000count <- c(s1000count, length(unique(s1000)));
};
school.choice.radius <- data.frame(S500 = s500count, S800 = s800count, S1000 = s1000count);
}
scr <- school.choice.radius(buildings, school.blocks)
school.choice.radius <- function(buildings, school.blocks) {
s500count <- integer();
s800count <- integer();
s1000count <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
p <- c(buildings$POINT_X[bIdx], buildings$POINT_Y[bIdx]);
s500 <- numeric();
s800 <- numeric();
s1000 <- numeric();
for (sbIdx in 1:nrow(school.blocks)) {
sId <- school.blocks$SCHOOL_ID[sbIdx];
sp <- c(school.blocks$POINT_X[sbIdx], school.blocks$POINT_Y[sbIdx]);
dist <- distVincentyEllipsoid(p, sp);
if (dist <= 500) {
s500 <- c(s500, sId);
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 800) {
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 1000) {
s1000 <- c(s1000, sId);
}
};
s500count <- c(s500count, length(unique(s500)));
s800count <- c(s800count, length(unique(s800)));
s1000count <- c(s1000count, length(unique(s1000)));
print(paste(bIdx, " ", round((100*bIdx)/nrow(buildings), digits = 2), "%", sep = ""));
};
school.choice.radius <- data.frame(S500 = s500count, S800 = s800count, S1000 = s1000count);
}
scr <- school.choice.radius(buildings, school.blocks)
library("geosphere", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
scr <- school.choice.radius(buildings, school.blocks)
scr <- school.choice.radius(buildings[buildings$ID < 10,], school.blocks)
View(scr)
buildings[buildings$ID < 10,]
rm(scr)
scr <- school.choice.radius(buildings, school.blocks)
View(scr)
save.image()
max(scr$S500)
max(scr$S800)
max(scr$S1000)
buildings$ACCESSIBLE_SCHOOLS_R500 <- scr$S500
buildings$ACCESSIBLE_SCHOOLS_R800 <- scr$S800
buildings$ACCESSIBLE_SCHOOLS_R1000 <- scr$S1000
View(buildings)
rm(scr)
save.image()
savehistory()
max(buildings$ACCESSIBLE_SCHOOLS_R500)
head(buildings[order(buildings$ACCESSIBLE_SCHOOLS_R500),], n = 15)
head(buildings[order(buildings$ACCESSIBLE_SCHOOLS_R500),], n = 15)[c(3, 10)]
head(buildings[order(buildings$ACCESSIBLE_SCHOOLS_R500),], n = 15)[c(3, 13)]
head(buildings[order(buildings$ACCESSIBLE_SCHOOLS_R500),], n = 15)[c(3, 17)]
head(buildings[order(buildings$ACCESSIBLE_SCHOOLS_R500),], n = 15)[c(3, 18)]
head(buildings[order(buildings$ACCESSIBLE_SCHOOLS_R500, decreasing = TRUE),], n = 15)[c(3, 18)]
head(buildings[order(buildings$ACCESSIBLE_SCHOOLS_R500, decreasing = TRUE),], n = 15)[c(3, 4, 18)]
save.image()
asarea <- aggregate(school2building, by=(BUILDING_ID), length)
asarea <- aggregate(school2building, by=(school2building$BUILDING_ID), length)
asarea <- aggregate(school2building$SCHOOL_ID, by=(BUILDING_ID=school2building$BUILDING_ID), length)
asarea <- aggregate(school2building$SCHOOL_ID, list(BUILDING_ID=school2building$BUILDING_ID), length)
View(asarea)
max(asarea$x)
asarea$ACCESSIBLE_SCHOOLS_AREA <- asarea$x
View(asarea)
asarea$x<-NULL
View(asarea)
buildings.new <- merge(buildings, asarea, by.x = "ID", by.y = "BUILDING_ID", all.x = TRUE)
View(buildings.new)
bbuildings.new1 <- buildings.new[c(2,1,3:21)]
View(bbuildings.new1)
buildings.new <- buildings.new[c(2,1,3:21)]
rm(bbuildings.new1)
View(buildings.new)
ifelse(is.na(NA), 0, 1)
ifelse(is.na(1), 0, 1)
buildings.new[buildings.new$ACCESSIBLE_SCHOOLS_AREA == NA,]
buildings.new[is.na(buildings.new$ACCESSIBLE_SCHOOLS_AREA),]
length(buildings.new[is.na(buildings.new$ACCESSIBLE_SCHOOLS_AREA),])
nrow(buildings.new[is.na(buildings.new$ACCESSIBLE_SCHOOLS_AREA),])
nrow(buildings) - nrow(asarea)
buildings.new$ASA <- sapply(buildings.new$ACCESSIBLE_SCHOOLS_AREA, {function(x) ifelse(is.na(x), 0, x)})
View(buildings.new)
buildings.new$ACCESSIBLE_SCHOOLS_AREA <- buildings.new$ASA
buildings.new$ASA <- NULL
View(buildings.new)
buildings.new[is.na(buildings.new$ACCESSIBLE_SCHOOLS_AREA),]
buildings <- bbuildings.new
buildings <- buildings.new
rm(asarea, buildings.new)
save.image()
savehistory()
school.choice.complex <- function(buildings, school2building, complexes) {
school.choice <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
complexIds <- unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == id,],]$COMPLEX_ID)
schools.count <- sum(complexes[complexes$ID %in% complexIds,]$SCHOOLS_COUNT)
school.choice <- c(school.choice, schools.count);
}
school.choice.complex <- data.frame(BUILDING_ID = buildings$ID, ACCESSIBLE_SCHOOLS_COMPLEX = school.choice);
school.choice.complex;
}
asc <- school.choice.complex(buildings, school2building, complexes)
school.choice.complex <- function(buildings, school2building, complexes) {
school.choice <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
complexIds <- unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == id,],]$COMPLEX_ID)
schools.count <- sum(complexes[complexes$ID %in% complexIds,]$SCHOOLS_COUNT)
school.choice <- c(school.choice, schools.count);
print(paste(bIdx, " ", round((100*bIdx)/nrow(buildings), digits = 2), "%", sep = ""));
}
school.choice.complex <- data.frame(BUILDING_ID = buildings$ID, ACCESSIBLE_SCHOOLS_COMPLEX = school.choice);
school.choice.complex;
}
asc <- school.choice.complex(buildings, school2building, complexes)
View(asc)
buildings$ID[1]
unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == 1,],]$COMPLEX_ID)
school2building[school2building$BUILDING_ID == 1,]
school2building[school2building$BUILDING_ID == 1,]$SCHOOL_ID
unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == 1,]$SCHOOL_ID,]$COMPLEX_ID)
unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == 1,]$SCHOOL_ID,]$COMPLEX_ID)
schools[schools$ID %in% school2building[school2building$BUILDING_ID == 1,]$SCHOOL_ID
;
schools[schools$ID %in% school2building[school2building$BUILDING_ID == 1,]$SCHOOL_ID,]
sum(complexes[complexes$ID %in% unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == 1,]$SCHOOL_ID,]$COMPLEX_ID),]$SCHOOLS_COUNT)
complexes[complexes$ID %in% unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == 1,]$SCHOOL_ID,]$COMPLEX_ID),]
school.choice.complex <- function(buildings, school2building, complexes) {
school.choice <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
complexIds <- unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == id,]$SCHOOL_ID,]$COMPLEX_ID)
schools.count <- sum(complexes[complexes$ID %in% complexIds,]$SCHOOLS_COUNT)
school.choice <- c(school.choice, schools.count);
print(paste(bIdx, " ", round((100*bIdx)/nrow(buildings), digits = 2), "%", sep = ""));
}
school.choice.complex <- data.frame(BUILDING_ID = buildings$ID, ACCESSIBLE_SCHOOLS_COMPLEX = school.choice);
school.choice.complex;
}
asc <- school.choice.complex(buildings, school2building, complexes)
View(asc)
buildings$ACCESSIBLE_SCHOOLS_COMPLEX <- asc$ACCESSIBLE_SCHOOLS_COMPLEX
View(buildings)
rm(asc, agg.double)
save.image()
BUILDING_ID
rm(BUILDING_ID)
rm(school.choice.complex)
rm(school.choice.radius)
save.image()
