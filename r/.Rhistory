maxStudents <- round(80*(maxStudents/100));
students <- 0;
index <- 0;
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= maxStudents) {
index <- bIdx - 1;
break;
}
}
r <- tail(head(builds, index), 1)$build_distances;
radiuses <- c(radiuses, r);
print(paste((100*sIdx)/nrow(schools), "%"));
}
radiuses;
}
r500 <- radiuses(schools, buildings, 500)
radiuses = function(schools, buildings, maxStudents = 500){
radiuses <- numeric();
for (sIdx in 1:nrow(schools)) {
s <- c(schools$POINT_X[sIdx], schools$POINT_Y[sIdx]);
build_distances <- distances(s, buildings);
builds <- data.frame(buildings$OBJECTID_12, buildings$STUDENTS, build_distances);
builds <- builds[order(build_distances), ];
maxStudents <- round(80*(maxStudents/100));
students <- 0;
index <- 0;
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= maxStudents) {
index <- bIdx - 1;
break;
}
}
r <- tail(head(builds, index), 1)$build_distances;
radiuses <- c(radiuses, r);
print(paste(round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
radiuses;
}
r500 <- radiuses(schools, buildings, 500)
r500
r <- radiuses(subset(schools, OBJECTID <= 1), buildings, 500)
r <- radiuses(subset(schools, OBJECTID <= 10), buildings, 500)
r
length(r500)
r <- radiuses(subset(schools, OBJECTID <= 1), buildings, 500)
radiuses = function(schools, buildings){
radiuses500 <- numeric();
radiuses800 <- numeric();
radiuses1000 <- numeric();
for (sIdx in 1:nrow(schools)) {
s <- c(schools$POINT_X[sIdx], schools$POINT_Y[sIdx]);
build_distances <- distances(s, buildings);
builds <- data.frame(buildings$OBJECTID_12, buildings$STUDENTS, build_distances);
builds <- builds[order(build_distances), ];
maxStudents <- round(80*(maxStudents/100));
students <- 0;
r500 <- numeric();
r800 <- numeric();
r1000 <- numeric();
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= 500 && is.null(r500)) {
r500 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= 800 && is.null(r800)) {
r800 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= 1000 && is.null(r1000)) {
r1000 <- tail(head(builds, bIdx - 1), 1)$build_distances;
break;
}
}
radiuses500 <- c(radiuses500, r500);
radiuses800 <- c(radiuses800, r800);
radiuses1000 <- c(radiuses1000, r1000);
print(paste(round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
radiuses = data.frame(radiuses500, radiuses800, radiuses1000);
radiuses;
}
r <- radiuses(subset(schools, OBJECTID <= 1), buildings)
radiuses = function(schools, buildings){
radiuses500 <- numeric();
radiuses800 <- numeric();
radiuses1000 <- numeric();
for (sIdx in 1:nrow(schools)) {
s <- c(schools$POINT_X[sIdx], schools$POINT_Y[sIdx]);
build_distances <- distances(s, buildings);
builds <- data.frame(buildings$OBJECTID_12, buildings$STUDENTS, build_distances);
builds <- builds[order(build_distances), ];
maxStudents <- round(80*(maxStudents/100));
students <- 0;
r500 <- numeric();
r800 <- numeric();
r1000 <- numeric();
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= round(80*(500/100)) && is.null(r500)) {
r500 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(800/100)) && is.null(r800)) {
r800 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(1000/100)) && is.null(r1000)) {
r1000 <- tail(head(builds, bIdx - 1), 1)$build_distances;
break;
}
}
radiuses500 <- c(radiuses500, r500);
radiuses800 <- c(radiuses800, r800);
radiuses1000 <- c(radiuses1000, r1000);
print(paste(round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
radiuses = data.frame(radiuses500, radiuses800, radiuses1000);
radiuses;
}
r <- radiuses(subset(schools, OBJECTID <= 1), buildings)
radiuses = function(schools, buildings){
radiuses500 <- numeric();
radiuses800 <- numeric();
radiuses1000 <- numeric();
for (sIdx in 1:nrow(schools)) {
s <- c(schools$POINT_X[sIdx], schools$POINT_Y[sIdx]);
build_distances <- distances(s, buildings);
builds <- data.frame(buildings$OBJECTID_12, buildings$STUDENTS, build_distances);
builds <- builds[order(build_distances), ];
students <- 0;
r500 <- numeric();
r800 <- numeric();
r1000 <- numeric();
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= round(80*(500/100)) && is.null(r500)) {
r500 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(800/100)) && is.null(r800)) {
r800 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(1000/100)) && is.null(r1000)) {
r1000 <- tail(head(builds, bIdx - 1), 1)$build_distances;
break;
}
}
radiuses500 <- c(radiuses500, r500);
radiuses800 <- c(radiuses800, r800);
radiuses1000 <- c(radiuses1000, r1000);
print(paste(round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
radiuses = data.frame(radiuses500, radiuses800, radiuses1000);
radiuses;
}
r <- radiuses(subset(schools, OBJECTID <= 1), buildings)
View(r)
r
source('/media/WORK/hse/school-accessibility/r/calc_radius.R')
r <- radiuses(subset(schools, OBJECTID <= 1), buildings)
is.null(r500)
r500
length(r500)
debugSource('/media/WORK/hse/school-accessibility/r/calc_radius.R')
radiuses = function(schools, buildings){
radiuses500 <- numeric();
radiuses800 <- numeric();
radiuses1000 <- numeric();
for (sIdx in 1:nrow(schools)) {
s <- c(schools$POINT_X[sIdx], schools$POINT_Y[sIdx]);
build_distances <- distances(s, buildings);
builds <- data.frame(buildings$OBJECTID_12, buildings$STUDENTS, build_distances);
builds <- builds[order(build_distances), ];
students <- 0;
r500 <- numeric();
r800 <- numeric();
r1000 <- numeric();
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= round(80*(500/100)) && length(r500) == 0) {
r500 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(800/100)) && length(r800) == 0) {
r800 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(1000/100)) && length(r1000) == 0) {
r1000 <- tail(head(builds, bIdx - 1), 1)$build_distances;
break;
}
}
radiuses500 <- c(radiuses500, r500);
radiuses800 <- c(radiuses800, r800);
radiuses1000 <- c(radiuses1000, r1000);
print(paste(round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
radiuses = data.frame(radiuses500, radiuses800, radiuses1000);
radiuses;
}
r <- radiuses(subset(schools, OBJECTID <= 1), buildings)
r
radiuses500 <- numeric();
radiuses800 <- numeric();
radiuses1000 <- numeric();
for (sIdx in 1:nrow(schools)) {
s <- c(schools$POINT_X[sIdx], schools$POINT_Y[sIdx]);
build_distances <- distances(s, buildings);
builds <- data.frame(buildings$OBJECTID_12, buildings$STUDENTS, build_distances);
builds <- builds[order(build_distances), ];
students <- 0;
r500 <- numeric();
r800 <- numeric();
r1000 <- numeric();
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= round(80*(500/100)) && length(r500) == 0) {
r500 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(800/100)) && length(r800) == 0) {
r800 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(1000/100)) && length(r1000) == 0) {
r1000 <- tail(head(builds, bIdx - 1), 1)$build_distances;
break;
}
}
radiuses500 <- c(radiuses500, r500);
radiuses800 <- c(radiuses800, r800);
radiuses1000 <- c(radiuses1000, r1000);
print(paste(round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
radiuses500 <- numeric();
radiuses800 <- numeric();
radiuses1000 <- numeric();
for (sIdx in 1:nrow(schools)) {
s <- c(schools$POINT_X[sIdx], schools$POINT_Y[sIdx]);
build_distances <- distances(s, buildings);
builds <- data.frame(buildings$OBJECTID_12, buildings$STUDENTS, build_distances);
builds <- builds[order(build_distances), ];
students <- 0;
r500 <- numeric();
r800 <- numeric();
r1000 <- numeric();
for (bIdx in 1:nrow(builds)) {
students <- students + builds$buildings.STUDENTS[bIdx];
if (students >= round(80*(500/100)) && length(r500) == 0) {
r500 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(800/100)) && length(r800) == 0) {
r800 <- tail(head(builds, bIdx - 1), 1)$build_distances;
}
if (students >= round(80*(1000/100)) && length(r1000) == 0) {
r1000 <- tail(head(builds, bIdx - 1), 1)$build_distances;
break;
}
}
radiuses500 <- c(radiuses500, r500);
radiuses800 <- c(radiuses800, r800);
radiuses1000 <- c(radiuses1000, r1000);
print(paste(round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
rm(r1000)
rm(bIdx)
rm(r500)
rm(r800)
rm(s)
rm(sIdx)
rm(students)
radiuses1000
buildings$r1000 <- radiuses1000
schools$r1000 <- radiuses1000
schools$r1000 <- null
schools$r1000 <- NULL
schools$r500 <- radiuses500
schools$r800 <- radiuses800
schools$r1000 <- radiuses1000
View(schools)
View(schools)
View(schools)
schools
savehistory()
save.image()
write.csv
write.csv(schools, "schools-rad.csv")
View(schools)
schools_ord <- schools[order(r500, decreasing = T)]
schools_ord <- schools[order(schools$r500, decreasing = T)]
schools_ord <- schools[order(r500, decreasing = T)]
schools_ord <- schools[order(r500)]
attributes(schools)
schools_ord <- schools[order(r500)]
schools_ord <- schools[order(schools$r500)]
schools[order(r500)]
schools[order(r800)]
schools[order(OBJECTID)]
schools[order(OBJECTID), ]
schools[order(OBJECTID), ];
schools[order(r500)]
schools[order(schools$r500)]
schools[order(schools$r500)]
schools[order(schools[17])]
schools[17]
schools$r500
attach(schools)
schools[order(schools$r500)]
schools[order(r500)]
detach(schools)
colnames(schools)
schools[order(r500),]
schools[order(schools$r500),]
schools_ord <- schools[order(schools$r500),]
View(schools_ord)
schools_ord <- schools[order(schools$r500, decreasing = T),]
View(schools_ord)
rm(schools_ord)
freqhist_school_rad_for_500_students <- ggplot(data, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(data$students_per_school_mean, breaks=seq(99, 999, by = 100))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(99, 999, by = 100), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(data, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(99, 999, by = 100))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(99, 999, by = 100), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students
cut(schools$r500, breaks=seq(99, 999, by = 100))
summary(schools$r500)
freqhist_school_rad_for_500_students <- ggplot(data, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
cut(schools$r500, breaks=seq(99, 999, by = 100))
cut(schools$r500, breaks=seq(49, 999, by = 50))
cut(data$students_per_school_mean, breaks=seq(99, 999, by = 100))
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(data, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(data, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
#scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
#scale_y_continuous(name="Частота распределения", breaks=0:20) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
ggplot(data, aes(x=schools$r500))
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
ggplot(data, aes(x=schools$r500))
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
ggplot(data, aes(x=schools$r500))
freqhist_school_rad_for_500_students
colors_schools_radius = c("#730000", "#A80000", "#e60000", "#ff7f7f", "#a3ff73", "#55ff00", "#4ce600", "#38a800", "#267300", "#264500");
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500))
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
#scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
#scale_y_continuous(name="Частота распределения", breaks=0:20) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
#scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:20) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
#scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
#scale_y_continuous(name="Частота распределения", breaks=0:20) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
#scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=0:400) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
#scale_y_continuous(name="Частота распределения", breaks=0:400) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_500_students <- ggplot(schools, aes(x=schools$r500)) +
geom_histogram(aes(fill=cut(schools$r500, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 500 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
#scale_fill_manual("", breaks=levels(cut(schools$r500, breaks=seq(49, 999, by = 50), right = FALSE)), values=colors_schools_radius) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_800_students <- ggplot(schools, aes(x=schools$r800)) +
geom_histogram(aes(fill=cut(schools$r800, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 800 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_1000_students <- ggplot(schools, aes(x=schools$r1000)) +
geom_histogram(aes(fill=cut(schools$r1000, breaks=seq(49, 999, by = 50))), colour="black", fill="white", binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Радиус доступности, школы охватывающий 1000 школьников", breaks=seq(0, 1000, by = 50), limits=c(0, 1000)) +
scale_y_continuous(name="Частота распределения", breaks=seq(0, 350, 50)) +
theme(legend.position="none")
freqhist_school_rad_for_500_students
freqhist_school_rad_for_800_students
freqhist_school_rad_for_1000_students
freqhist_school_rad_for_800_students
savehistory()
freqhist_school_rad_for_500_students
freqhist_school_rad_for_800_students
freqhist_school_rad_for_1000_students
install.packages("RSiena")
library("RSiena", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
detach("package:RSiena", unload=TRUE)
data_colnames_eng = c("Administrative okrug",
"Mean amount of students per school",
"Percent of students who lives farther than 500m from the closest school",
"Percent of students who lives farther than 500m from the closest school by use of pedestrian routes",
"Students who lives farther than 500m from the closest school",
"Students who lives farther than 500m from the closest school by use of pedestrian routes");
freqhist_not_accessible_students_by_radius <- ggplot(data, aes(x=data$not_accessible_area_by_radius)) +
geom_histogram(aes(y=..count..), colour="black", fill="white", binwidth = 50) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Students who lives farther than 500m from the closest school", breaks=seq(0, 3400, by = 200)) +
scale_y_continuous(name="Frequency distribution", breaks=0:15)
freqhist_not_accessible_students_by_radius
freqhist_not_accessible_students_by_radius <- ggplot(data, aes(x=data$not_accessible_area_by_radius)) +
geom_histogram(aes(y=..count..), colour="black", fill="white", binwidth = 50) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Students who lives farther than 500m \nfrom the closest school", breaks=seq(0, 3400, by = 200)) +
scale_y_continuous(name="Frequency distribution", breaks=0:15)
freqhist_not_accessible_students_by_radius
freqhist_students_per_school_mean_hist <- ggplot(data, aes(x=data$students_per_school_mean)) +
geom_histogram(aes(fill=cut(data$students_per_school_mean, breaks=seq(99, 999, by = 100))), binwidth = 25) +
#geom_density(alpha=.2) +
scale_x_continuous(name="Mean number of students per school", breaks=seq(0, 1000, by = 100), limits=c(0, 1000)) +
scale_y_continuous(name="Frequency distribution", breaks=0:20) +
scale_fill_manual("", breaks=levels(cut(data$students_per_school_mean, breaks=seq(99, 999, by = 100), right = FALSE)), values=colors_students_per_school_mean) +
theme(legend.position="none")
freqhist_students_per_school_mean_hist
Version()
version()
