generate.connection.features;
}
generate.area.features <- function(buildings, schools, school.blocks, school2building) {
generate.area.features <- data.frame();
featureId <- 0;
buildingsColumnIds <- c(which(names(buildings)=="ID"), which(names(buildings)=="POINT_X"), which(names(buildings)=="POINT_Y"));
for (sIdx in 1:nrow(schools)) {
sId <- schools$ID[sIdx];
s2b <- school2building[school2building$SCHOOL_ID == sId,];
if (nrow(s2b) == 0) {
next;
}
s2b <- merge(s2b, buildings[buildings$ID %in% s2b$BUILDING_ID,][buildingsColumnIds], by.x = "BUILDING_ID", by.y = "ID");
s2b$BUILDING_POINT_X <- s2b$POINT_X;
s2b$BUILDING_POINT_Y <- s2b$POINT_Y;
s2b$POINT_X <- NULL;
s2b$POINT_Y <- NULL;
sbs <- school.blocks[school.blocks$SCHOOL_ID == sId,];
school.blocks.ids <- integer();
school.blocks.p_x <- numeric();
school.blocks.p_y <- numeric();
bearings <- numeric();
for(s2bIdx in 1:nrow(s2b)) {
bp <- c(s2b$BUILDING_POINT_X[s2bIdx],s2b$BUILDING_POINT_Y[s2bIdx]);
dists <- integer();
for (sbIdx in 1:nrow(sbs)) {
dist <- distVincentyEllipsoid(bp, c(sbs$POINT_X[sbIdx], sbs$POINT_Y[sbIdx]));
dists <- c(dists, dist);
}
sbs$DIST <- dists;
closestSchoolBlock <- sbs[which(sbs$DIST == min(sbs$DIST)),];
if (closestSchoolBlock$ID[1] == 243) {
closestSchoolBlock <- sbs[which(sbs$ID == 244),];
} else if (closestSchoolBlock$ID[1] == 1444 & buildings[buildings$ID == s2b$BUILDING_ID[s2bIdx],]$DISTRICT_ID[1] == 31) {
closestSchoolBlock <- sbs[which(sbs$ID == 1445),];
}
school.blocks.ids <- c(school.blocks.ids, closestSchoolBlock$ID[1]);
school.blocks.p_x <- c(school.blocks.p_x, closestSchoolBlock$POINT_X[1]);
school.blocks.p_y <- c(school.blocks.p_y, closestSchoolBlock$POINT_Y[1]);
bearings <- c(bearings, bearing(c(closestSchoolBlock$POINT_X[1], closestSchoolBlock$POINT_Y[1]), bp));
};
s2b$SCHOOL_BLOCK_ID <- school.blocks.ids;
s2b$SCHOOL_BLOCK_POINT_X <- school.blocks.p_x;
s2b$SCHOOL_BLOCK_POINT_Y <- school.blocks.p_y;
s2b$BEARING <- bearings;
s2b$BEARING <- sapply(s2b$BEARING, {function(x) ifelse(is.na(x), 0, x)});
s2b <- s2b[order(s2b$SCHOOL_BLOCK_ID, s2b$BEARING),]
schs <- integer();
s.blks <- integer()
featureIds <- integer();
pointXs <- numeric();
pointYs <- numeric();
for(s2bIdx in 1:nrow(s2b)) {
sch <- s2b$SCHOOL_ID[s2bIdx];
s.blk <- s2b$SCHOOL_BLOCK_ID[s2bIdx];
featureId <- featureId + 1;
pX1 <- s2b$BUILDING_POINT_X[s2bIdx];
pY1 <- s2b$BUILDING_POINT_Y[s2bIdx];
pX2 <- 0;
pY2 <- 0;
bearing1 <- s2b$BEARING[s2bIdx];
bearing2 <- 0;
if (s2bIdx + 1 > nrow(s2b) | s2b$SCHOOL_BLOCK_ID[s2bIdx] != s2b$SCHOOL_BLOCK_ID[s2bIdx+1]) {
s2b.first <- s2b[s2b$SCHOOL_BLOCK_ID == s2b$SCHOOL_BLOCK_ID[s2bIdx],];
pX2 <- s2b.first$BUILDING_POINT_X[1];
pY2 <- s2b.first$BUILDING_POINT_Y[1];
bearing2 <- s2b.first$BEARING[1];
if(is.na(bearing2)) {
print("");
}
} else {
pX2 <- s2b$BUILDING_POINT_X[s2bIdx+1];
pY2 <- s2b$BUILDING_POINT_Y[s2bIdx+1];
bearing2 <- s2b$BEARING[s2bIdx+1];
if(is.na(bearing2)) {
print("");
}
}
pXs <- s2b$SCHOOL_BLOCK_POINT_X[s2bIdx];
pYs <- s2b$SCHOOL_BLOCK_POINT_Y[s2bIdx];
if ((bearing2 - bearing1) > 180 ) {
next;
}
schs <- c(schs, sch);
s.blks <- c(s.blks, s.blk);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, pX1);
pointYs <- c(pointYs, pY1);
schs <- c(schs, sch);
s.blks <- c(s.blks, s.blk);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, pX2);
pointYs <- c(pointYs, pY2);
schs <- c(schs, sch);
s.blks <- c(s.blks, s.blk);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, pXs);
pointYs <- c(pointYs, pYs);
}
area.features <-
data.frame(SCHOOL_ID = schs, SCHOOL_BLOCK_ID = s.blks, FEATURE_ID = featureIds, POINT_X = pointXs, POINT_Y = pointYs);
generate.area.features <- rbind(generate.area.features, area.features);
print(paste(sIdx, " ", round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
generate.area.features;
}
features.area.catchement <- generate.area.features(buildings, schools[schools$ID == schools$ID[583],], school.blocks, school2building.catchement)
save.image()
savehistory()
features.area.catchement <- generate.area.features(buildings, schools, school.blocks, school2building.catchement)
write.csv(features.connection.catchement, "../csv/features.connection.catchement.csv", row.names = FALSE)
write.csv(features.area.catchement, "../csv/features.area.catchement.csv", row.names = FALSE)
save.image()
savehistory()
school2building.catchement[school2building.catchement$SCHOOL_ID == 10849,]
nrow(school2building.catchement[school2building.catchement$SCHOOL_ID == 10849,])
nrow(school2building.catchement[school2building.catchement$SCHOOL_ID == 11467,])
generate.connection.features <- function(buildings, schools, school.blocks, school2building) {
generate.connection.features <- data.frame();
featureId <- 0;
buildingsColumnIds <- c(which(names(buildings)=="ID"), which(names(buildings)=="POINT_X"), which(names(buildings)=="POINT_Y"));
for (sIdx in 1:nrow(schools)) {
sId <- schools$ID[sIdx];
s2b <- school2building[school2building$SCHOOL_ID == sId,];
if (nrow(s2b) == 0) {
next;
}
s2b <- merge(s2b, buildings[buildings$ID %in% s2b$BUILDING_ID,][buildingsColumnIds], by.x = "BUILDING_ID", by.y = "ID");
s2b$BUILDING_POINT_X <- s2b$POINT_X;
s2b$BUILDING_POINT_Y <- s2b$POINT_Y;
s2b$POINT_X <- NULL;
s2b$POINT_Y <- NULL;
sbs <- school.blocks[school.blocks$SCHOOL_ID == sId,];
school.blocks.ids <- integer();
school.blocks.p_x <- numeric();
school.blocks.p_y <- numeric();
bearings <- numeric();
for(s2bIdx in 1:nrow(s2b)) {
bp <- c(s2b$BUILDING_POINT_X[s2bIdx],s2b$BUILDING_POINT_Y[s2bIdx]);
dists <- integer();
for (sbIdx in 1:nrow(sbs)) {
dist <- distVincentyEllipsoid(bp, c(sbs$POINT_X[sbIdx], sbs$POINT_Y[sbIdx]));
dists <- c(dists, dist);
}
sbs$DIST <- dists;
closestSchoolBlock <- sbs[which(sbs$DIST == min(sbs$DIST)),];
if (closestSchoolBlock$ID[1] == 243) {
closestSchoolBlock <- sbs[which(sbs$ID == 244),];
} else if (closestSchoolBlock$ID[1] == 1444 & buildings[buildings$ID == s2b$BUILDING_ID[s2bIdx],]$DISTRICT_ID[1] == 31) {
closestSchoolBlock <- sbs[which(sbs$ID == 1445),];
}
school.blocks.ids <- c(school.blocks.ids, closestSchoolBlock$ID[1]);
school.blocks.p_x <- c(school.blocks.p_x, closestSchoolBlock$POINT_X[1]);
school.blocks.p_y <- c(school.blocks.p_y, closestSchoolBlock$POINT_Y[1]);
bearings <- c(bearings, bearing(c(closestSchoolBlock$POINT_X[1], closestSchoolBlock$POINT_Y[1]), bp));
};
s2b$SCHOOL_BLOCK_ID <- school.blocks.ids;
s2b$SCHOOL_BLOCK_POINT_X <- school.blocks.p_x;
s2b$SCHOOL_BLOCK_POINT_Y <- school.blocks.p_y;
s2b$BEARING <- bearings;
s2b <- s2b[order(s2b$SCHOOL_BLOCK_ID, s2b$BEARING),]
schs <- integer();
s.blks <- integer()
featureIds <- integer();
pointXs <- numeric();
pointYs <- numeric();
for(s2bIdx in 1:nrow(s2b)) {
featureId <- featureId + 1;
schs <- c(schs, s2b$SCHOOL_ID[s2bIdx]);
s.blks <- c(s.blks, s2b$SCHOOL_BLOCK_ID[s2bIdx]);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, s2b$BUILDING_POINT_X[s2bIdx]);
pointYs <- c(pointYs, s2b$BUILDING_POINT_Y[s2bIdx]);
schs <- c(schs, s2b$SCHOOL_ID[s2bIdx]);
s.blks <- c(s.blks, s2b$SCHOOL_BLOCK_ID[s2bIdx]);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, s2b$SCHOOL_BLOCK_POINT_X[s2bIdx]);
pointYs <- c(pointYs, s2b$SCHOOL_BLOCK_POINT_Y[s2bIdx]);
}
connection.features <-
data.frame(SCHOOL_ID = schs, SCHOOL_BLOCK_ID = s.blks, FEATURE_ID = featureIds, POINT_X = pointXs, POINT_Y = pointYs);
generate.connection.features <- rbind(generate.connection.features, connection.features);
print(paste(sIdx, " ", round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
generate.connection.features;
}
generate.area.features <- function(buildings, schools, school.blocks, school2building) {
generate.area.features <- data.frame();
featureId <- 0;
buildingsColumnIds <- c(which(names(buildings)=="ID"), which(names(buildings)=="POINT_X"), which(names(buildings)=="POINT_Y"));
for (sIdx in 1:nrow(schools)) {
sId <- schools$ID[sIdx];
s2b <- school2building[school2building$SCHOOL_ID == sId,];
if (nrow(s2b) == 0) {
next;
}
s2b <- merge(s2b, buildings[buildings$ID %in% s2b$BUILDING_ID,][buildingsColumnIds], by.x = "BUILDING_ID", by.y = "ID");
s2b$BUILDING_POINT_X <- s2b$POINT_X;
s2b$BUILDING_POINT_Y <- s2b$POINT_Y;
s2b$POINT_X <- NULL;
s2b$POINT_Y <- NULL;
sbs <- school.blocks[school.blocks$SCHOOL_ID == sId,];
school.blocks.ids <- integer();
school.blocks.p_x <- numeric();
school.blocks.p_y <- numeric();
bearings <- numeric();
for(s2bIdx in 1:nrow(s2b)) {
bp <- c(s2b$BUILDING_POINT_X[s2bIdx],s2b$BUILDING_POINT_Y[s2bIdx]);
dists <- integer();
for (sbIdx in 1:nrow(sbs)) {
dist <- distVincentyEllipsoid(bp, c(sbs$POINT_X[sbIdx], sbs$POINT_Y[sbIdx]));
dists <- c(dists, dist);
}
sbs$DIST <- dists;
closestSchoolBlock <- sbs[which(sbs$DIST == min(sbs$DIST)),];
if (closestSchoolBlock$ID[1] == 243) {
closestSchoolBlock <- sbs[which(sbs$ID == 244),];
} else if (closestSchoolBlock$ID[1] == 1444 & buildings[buildings$ID == s2b$BUILDING_ID[s2bIdx],]$DISTRICT_ID[1] == 31) {
closestSchoolBlock <- sbs[which(sbs$ID == 1445),];
}
school.blocks.ids <- c(school.blocks.ids, closestSchoolBlock$ID[1]);
school.blocks.p_x <- c(school.blocks.p_x, closestSchoolBlock$POINT_X[1]);
school.blocks.p_y <- c(school.blocks.p_y, closestSchoolBlock$POINT_Y[1]);
bearings <- c(bearings, bearing(c(closestSchoolBlock$POINT_X[1], closestSchoolBlock$POINT_Y[1]), bp));
};
s2b$SCHOOL_BLOCK_ID <- school.blocks.ids;
s2b$SCHOOL_BLOCK_POINT_X <- school.blocks.p_x;
s2b$SCHOOL_BLOCK_POINT_Y <- school.blocks.p_y;
s2b$BEARING <- bearings;
s2b$BEARING <- sapply(s2b$BEARING, {function(x) ifelse(is.na(x), 0, x)});
s2b <- s2b[order(s2b$SCHOOL_BLOCK_ID, s2b$BEARING),]
schs <- integer();
s.blks <- integer()
featureIds <- integer();
pointXs <- numeric();
pointYs <- numeric();
for(s2bIdx in 1:nrow(s2b)) {
sch <- s2b$SCHOOL_ID[s2bIdx];
s.blk <- s2b$SCHOOL_BLOCK_ID[s2bIdx];
featureId <- featureId + 1;
pX1 <- s2b$BUILDING_POINT_X[s2bIdx];
pY1 <- s2b$BUILDING_POINT_Y[s2bIdx];
pX2 <- 0;
pY2 <- 0;
bearing1 <- s2b$BEARING[s2bIdx];
bearing2 <- 0;
if (s2bIdx + 1 > nrow(s2b) | s2b$SCHOOL_BLOCK_ID[s2bIdx] != s2b$SCHOOL_BLOCK_ID[s2bIdx+1]) {
s2b.first <- s2b[s2b$SCHOOL_BLOCK_ID == s2b$SCHOOL_BLOCK_ID[s2bIdx],];
pX2 <- s2b.first$BUILDING_POINT_X[1];
pY2 <- s2b.first$BUILDING_POINT_Y[1];
bearing2 <- s2b.first$BEARING[1] + 360;
} else {
pX2 <- s2b$BUILDING_POINT_X[s2bIdx+1];
pY2 <- s2b$BUILDING_POINT_Y[s2bIdx+1];
bearing2 <- s2b$BEARING[s2bIdx+1];
}
pXs <- s2b$SCHOOL_BLOCK_POINT_X[s2bIdx];
pYs <- s2b$SCHOOL_BLOCK_POINT_Y[s2bIdx];
if ((bearing2 - bearing1) > 180 ) {
next;
}
schs <- c(schs, sch);
s.blks <- c(s.blks, s.blk);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, pX1);
pointYs <- c(pointYs, pY1);
schs <- c(schs, sch);
s.blks <- c(s.blks, s.blk);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, pX2);
pointYs <- c(pointYs, pY2);
schs <- c(schs, sch);
s.blks <- c(s.blks, s.blk);
featureIds <- c(featureIds, featureId);
pointXs <- c(pointXs, pXs);
pointYs <- c(pointYs, pYs);
}
area.features <-
data.frame(SCHOOL_ID = schs, SCHOOL_BLOCK_ID = s.blks, FEATURE_ID = featureIds, POINT_X = pointXs, POINT_Y = pointYs);
generate.area.features <- rbind(generate.area.features, area.features);
print(paste(sIdx, " ", round((100*sIdx)/nrow(schools), digits = 2), "%", sep = ""));
}
generate.area.features;
}
save.image()
savehistory()
features.area.catchement <- generate.area.features(buildings, schools, school.blocks, school2building.catchement)
library("geosphere", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
library("geosphere", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
features.area.catchement <- generate.area.features(buildings, schools, school.blocks, school2building.catchement)
write.csv(features.area.catchement, "../csv/features.area.catchement.csv", row.names = FALSE)
save.image()
savehistory()
81482/5
521*0.33
172/3
521*0.34
175-151
24/2
school2building.catchement1 <- school2building.catchement
school2building.catchement1 <- merge(school2building.catchement1, buildings, by.x = "BUILDING_ID", by.y = "ID", all.x = TRUE)
View(school2building.catchement1)
View(school2building.catchement)
school2building.catchement1 <- merge(school2building.catchement, school2building.catchement1, by = c("SCHOOL_ID","BUILDING_ID"))
View(school2building.catchement1)
school2building.catchement1 <- school2building.catchement
school2building.catchement1 <- merge(school2building.catchement1, buildings, by.x = "BUILDING_ID", by.y = "ID", all.x = TRUE)
View(school2building.catchement1)
agg <- school2building.catchement
agg <- aggregate(school2building.catchement1$STUDENTS, list(SCHOOL_ID = school2building.catchement$SCHOOL_ID), sum)
View(agg)
school2building.catchement[school2building.catchement$SCHOOL_ID == 1400,]
schools[schools$NUMB==1400,]
agg <- school2building.catchement1 <- school2building.catchement
rm(agg)
school2building.catchement1 <- school2building.catchement
school2building.catchement1[school2building.catchement1$SCHOOL_ID == 1400,]
school2building.catchement1[school2building.catchement1$SCHOOL_ID == 1400,]$SCHOOL_ID = 10449
school2building.catchement1[school2building.catchement1$SCHOOL_ID == 1400,]
school2building.catchement1[school2building.catchement1$SCHOOL_ID == 10449,]
school2building.catchement <- school2building.catchement1
rm(school2building.catchement1)
save.image()
savehistory()
write.csv(school2building.catchement, "../csv/school2building-catchement.csv", row.names = FALSE, na = "")
library("geosphere", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
features.area.catchement <- generate.area.features(buildings, schools, school.blocks, school2building.catchement)
write.csv(features.area.catchement, "../csv/features.area.catchement.csv", row.names = FALSE)
features.connection.catchement <- generate.connection.features(buildings, schools, school.blocks, school2building.catchement)
write.csv(features.connection.catchement, "../csv/features.connection.catchement.csv", row.names = FALSE)
save.image()
savehistory()
school2building.catchement1 <- school2building.catchement
school2building.catchement1 <- merge(school2building.catchement1, buildings, by.x = "BUILDING_ID", by.y = "ID", all.x = TRUE)
agg <- aggregate(school2building.catchement1$STUDENTS, list(SCHOOL_ID = school2building.catchement$SCHOOL_ID), sum)
View(agg)
View(schools)
schools1 <- merge(schools, agg, by.x = "ID", by.y = "SCHOOL_ID", all.x=TRUE)
View(schools1)
schools1 <- schools1[c(2,3,1,4,5,6,7,8,9,10,11,12,13,14)]
schools1$ASSIGNMENT_AREA_STUDENTS <- schools1$x
schools1$x <- NULL
schools1$ASSIGNMENT_AREA_STUDENTS <- sapply(schools1$ASSIGNMENT_AREA_STUDENTS, {function(x) ifelse(is.na(x), 0, x)})
save.image()
savehistory()
schools <- schools1
rm(schools1)
rm(school2building.catchement1)
rm(agg)
save.image()
savehistory()
View(complexes)
schools1 <- schools
length(unique(schools1$ID))
length(unique(schools1$COMPLEX_ID))
schools1 <- aggregate(schools1$ASSIGNMENT_AREA_STUDENTS, list(COMPLEX_ID=schools1$COMPLEX_ID), sum)
View(schools1)
complexes1 <- merge(complexes, schools1, by.x="ID" by.y = "COMPLEX_ID")
complexes1 <- merge(complexes, schools1, by.x="ID", by.y = "COMPLEX_ID")
View(complexes1)
View(complexes)
complexes1$ASSIGNMENT_AREA_STUDENTS <- complexes1$x
View(complexes1)
complexes1$x <- NULL
View(complexes1)
complexes <- complexes1
rm(schools1,complexes1)
save.image()
savehistory()
View(buildings.old)
comment(complexes$ASSIGNMENT_AREA_STUDENTS)
comment(complexes$ASSIGNMENT_AREA_STUDENTS) <- "Расчетное число школьников, которым разрешено обучение в образовательном комплексе (проживающие на закрепленной территории)"
comment(complexes$ASSIGNMENT_AREA_STUDENTS)
complexes$CATCHEMENT_AREA_STUDENTS <- complexes$ASSIGNMENT_AREA_STUDENTS
comment(complexes$CATCHEMENT_AREA_STUDENTS) <- comment(complexes$ASSIGNMENT_AREA_STUDENTS)
View(complexes)
comment(complexes$CATCHEMENT_AREA_STUDENTS)
complexes$ASSIGNMENT_AREA_STUDENTS <- NULL
View(complexes)
complexes1 <- complexes[c(1:13,15,14)]
View(complexes1)
complexes <- complexes[c(1:13,15,14)]
rm(complexes1)
schools$CATCHEMENT_AREA_STUDENTS <- schools$ASSIGNMENT_AREA_STUDENTS
View(schools)
schools$ASSIGNMENT_AREA_STUDENTS <- NULL
View(schools)
comment(schools$CATCHEMENT_AREA_STUDENTS) <- "Расчетное число школьников, которым разрешено обучение в школе (проживающие на закрепленной территории)"
school2building.catchement1 <- school2building.catchement
rm(school2building.catchement1)
complexes$ASSIGNMENT_AREA_STUDENTS_INTENDED <- NULL
View(complexes)
save.image()
savehistory()
View(buildings.old)
school.choice.radius <- function(buildings, school.blocks) {
ids <- integer();
s500count <- integer();
s800count <- integer();
s1000count <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
p <- c(buildings$POINT_X[bIdx], buildings$POINT_Y[bIdx]);
s500 <- numeric();
s800 <- numeric();
s1000 <- numeric();
for (sbIdx in 1:nrow(school.blocks)) {
sId <- school.blocks$SCHOOL_ID[sbIdx];
sp <- c(school.blocks$POINT_X[sbIdx], school.blocks$POINT_Y[sbIdx]);
dist <- distVincentyEllipsoid(p, sp);
if (dist <= 500) {
s500 <- c(s500, sId);
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 800) {
s800 <- c(s800, sId);
s1000 <- c(s1000, sId);
} else if (dist <= 1000) {
s1000 <- c(s1000, sId);
}
};
ids <- c(ids, id);
s500count <- c(s500count, length(unique(s500)));
s800count <- c(s800count, length(unique(s800)));
s1000count <- c(s1000count, length(unique(s1000)));
print(paste(bIdx, " ", round((100*bIdx)/nrow(buildings), digits = 2), "%", sep = ""));
};
school.choice.radius <- data.frame(ID = ids, S500 = s500count, S800 = s800count, S1000 = s1000count);
}
school.choice.complex <- function(buildings, school2building, complexes) {
school.choice <- integer();
for (bIdx in 1:nrow(buildings)) {
id <- buildings$ID[bIdx];
complexIds <- unique(schools[schools$ID %in% school2building[school2building$BUILDING_ID == id,]$SCHOOL_ID,]$COMPLEX_ID)
schools.count <- sum(complexes[complexes$ID %in% complexIds,]$SCHOOLS_COUNT)
school.choice <- c(school.choice, schools.count);
print(paste(bIdx, " ", round((100*bIdx)/nrow(buildings), digits = 2), "%", sep = ""));
}
school.choice.complex <- data.frame(BUILDING_ID = buildings$ID, ACCESSIBLE_SCHOOLS_COMPLEX = school.choice);
school.choice.complex;
}
aa <- school.choice.radius(buildings, school.blocks)
save.image()
savehistory()
View(aa)
View(buildings)
buildings1 <- merge(buildings, aa, by="ID")
View(buildings1)
buildings1$ACCESSIBLE_SCHOOLS_R500 <- buildings1$S500
buildings1$ACCESSIBLE_SCHOOLS_R800 <- buildings1$S800
buildings1$ACCESSIBLE_SCHOOLS_R1000 <- buildings1$S1000
View(buildings1)
buildings1$S500 <- NULL
buildings1$S800 <- NULL
buildings1$S1000 <- NULL
View(buildings1)
save.image()
savehistory()
buildings <- buildings1
rm(buildings1)
View(buildings.old)
agg <- aggregate(school2building.catchement$SCHOOL_ID, list(BUILDING_ID=school2building.catchement$BUILDING_ID), length)
View(agg)
buildings1 <- merge(buildings, agg, by.x="ID", by.y="BUILDING_ID")
View(buildings1)
buildings1$ACCESSIBLE_SCHOOLS_AREA <- buildings1$x
buildings1$x <- NULL
buildings <- buildings1
rm(agg, buildings1)
save.image()
savehistory()
bb <- school.choice.complex(buildings, school2building.catchement, complexes)
View(bb)
buildings1 <- merge(buildings, bb, by.x="ID", by.y="BUILDING_ID")
View(buildings1)
buildings <- buildings1
rm(buildings1)
rm(aa, bb)
save.image()
savehistory()
write.csv(x = complexes, file = "../csv/complexes.csv", row.names = FALSE, na = "")
write.csv(x = school.blocks, file = "../csv/school.blocks.csv", row.names = FALSE, na = "")
write.csv(x = schools, file = "../csv/schools.csv", row.names = FALSE, na = "")
write.csv(x = buildings, file = "../csv/buildings.csv", row.names = FALSE, na = "")
save.image()
savehistory()
schools[schools$NUMB==1400,]
85*3
244701-244446
school.blocks$OBJECTID <- NULL
View(school.blocks)
View(schools)
schools$OBJECTID <- NULL
schools$OBJECTID_OLD <- NULL
View(schools)
write.csv(x = school.blocks, file = "../csv/school.blocks.csv", row.names = FALSE, na = "")
write.csv(x = schools, file = "../csv/schools.csv", row.names = FALSE, na = "")
save.image()
View(complexes)
agg <- aggregate(schools$ID, list(COMPLEX_ID=schools$COMPLEX_ID), length\)
agg <- aggregate(schools$ID, list(COMPLEX_ID=schools$COMPLEX_ID), length)
View(agg)
complexes1 <- merge(complexes, agg, by.x = "ID", by.y = "COMPLEX_ID")
View(complexes1)
complexes1$SCHOOLS_COUNT <- complexes1$x
complexes1$x <- NULL
complexes <- complexes1
rm(complexes1)
rm(agg)
write.csv(x = complexes, file = "../csv/complexes.csv", row.names = FALSE, na = "")
save.image()
savehistory()
