x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 25), limits=c(0, 340)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_classic() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 25), limits=c(0, 340)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
save.image()
savehistory()
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
#  scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
#  scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
#  scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
#  scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, breaks=c(-1, 400), limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
#  scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
#  scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, breaks=c(-100, 400), limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
#  scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
#  scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14), labels=c("","","","","","","","","","","","","","","")) +
scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340), labels=c("","","","")) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
#  scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
#  scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340)) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise  <- function(buildings, field, show.titles = TRUE) {
buildings$STUDENTS <- buildings$STUDENTS/1000;
#  colors <- data.frame(ID=c(0:19), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c", "#eda813",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700", "#7bed00",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
#                                             "#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
#  colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c", "#cc5e33", "#d97529", "#e68e1c",
#                                             "#f2c00c", "#f7d707", "#fcf403", "#c6f700",
#                                             "#35e300", "#02d609", "#0ec441", "#17b36d",
#                                             "#1e9094", "#166d8a", "#114d82"))
colors <- data.frame(ID=c(0:14), COLOR = c("#c2523c",
"#f7d707", "#fcf403", "#c6f700", "#7bed00",
"#35e300", "#02d609", "#0ec441", "#17b36d", "#1e9e84",
"#1e9094", "#166d8a", "#114d82", "#0c2f7a", "#081e4e"))
colors <- colors[colors$ID %in% unique(buildings[[field]]),]
x.axis.name <- "\nКоличество доступных школ"
y.axis.name <- "\nКоличество школьников\n(тыс. чел.)"
title <- comment(buildings[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.choise <- ggplot(buildings, aes_string(x=field, weight = "STUDENTS")) +
geom_histogram(fill=colors$COLOR, binwidth = 1) +
#  scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14), labels=c("","","","","","","","","","","","","","","")) +
#  scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340), labels=c("","","","")) +
#  stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
scale_x_discrete(name=x.axis.name, expand = c(0,2), limits=c(0:14)) +
scale_y_continuous(name=y.axis.name, breaks=seq(0, 325, by = 100), limits=c(0, 340)) +
stat_bin(binwidth=1, geom="text", aes(label=round(..count..)), size=3.5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.choise;
}
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA", FALSE)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_SNIP", FALSE)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_AREA", FALSE)
freqhist.choise(buildings, "ACCESSIBLE_SCHOOLS_COMPLEX", FALSE)
1726/5
2350/4
2350/5
2237/3
freqhist.economic  <- function(schools, field, include.zero = TRUE, show.titles = TRUE) {
colors <- c("#730000", "#e60000", "#55ff00", "#38a800", "#1b5000");
labels <- c("0", "0-500", "500-800", "800-1000", ">1000");
colors <- data.frame(ID=labels, COLOR = colors);
colors$ID <- as.character(colors$ID);
colors$COLOR <- as.character(colors$COLOR);
schools$STUDENTS_FACTOR <- cut(schools[[field]],
breaks=c(-1, 0, 500, 800, 1000, 10000),
labels=labels);
schools.to.graph <- schools[!is.na(schools[[field]]),];
if (!include.zero) {
schools.to.graph <- schools.to.graph[schools.to.graph[[field]] != 0,]
}
colors <- colors[colors$ID %in% unique(as.character(schools.to.graph$STUDENTS_FACTOR)),]
x.axis.name <- "\nСреднее число обучающихся в школе"
y.axis.name <- "Количество школ\n"
title <- comment(schools[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.economic <- ggplot(schools.to.graph, aes(x = STUDENTS_FACTOR)) +
geom_histogram(aes(fill=STUDENTS_FACTOR), binwidth = 1) +
scale_x_discrete(name=x.axis.name, labels=labels, breaks = labels, limits= labels) +
scale_y_continuous(name=y.axis.name, breaks=seq(0, 800, by = 100), limits=c(0, 860)) +
scale_fill_manual("", breaks=levels(schools.to.graph$STUDENTS_FACTOR), values=colors$COLOR) +
stat_bin(binwidth=1, geom="text", aes(label=(..count..)), size=5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme(legend.position="none") +
theme_minimal() +
ggtitle(title);
freqhist.economic;
}
freqhist.economic(schools, "STUDENTS_PROJECT_SNIP", TRUE, FALSE)
freqhist.economic  <- function(schools, field, include.zero = TRUE, show.titles = TRUE) {
colors <- c("#730000", "#e60000", "#55ff00", "#38a800", "#1b5000");
labels <- c("0", "0-500", "500-800", "800-1000", ">1000");
colors <- data.frame(ID=labels, COLOR = colors);
colors$ID <- as.character(colors$ID);
colors$COLOR <- as.character(colors$COLOR);
schools$STUDENTS_FACTOR <- cut(schools[[field]],
breaks=c(-1, 0, 500, 800, 1000, 10000),
labels=labels);
schools.to.graph <- schools[!is.na(schools[[field]]),];
if (!include.zero) {
schools.to.graph <- schools.to.graph[schools.to.graph[[field]] != 0,]
}
colors <- colors[colors$ID %in% unique(as.character(schools.to.graph$STUDENTS_FACTOR)),]
x.axis.name <- "\nСреднее число обучающихся в школе"
y.axis.name <- "Количество школ\n"
title <- comment(schools[[field]])
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
title <- ""
}
freqhist.economic <- ggplot(schools.to.graph, aes(x = STUDENTS_FACTOR)) +
geom_histogram(aes(fill=STUDENTS_FACTOR), binwidth = 1) +
scale_x_discrete(name=x.axis.name, labels=labels, breaks = labels, limits= labels) +
scale_y_continuous(name=y.axis.name, breaks=seq(0, 800, by = 100), limits=c(0, 860)) +
scale_fill_manual("", breaks=levels(schools.to.graph$STUDENTS_FACTOR), values=colors$COLOR) +
stat_bin(binwidth=1, geom="text", aes(label=(..count..)), size=5, colour="#4C4646", fontface="bold", vjust=-0.5) +
theme_minimal() +
theme(legend.position="none") +
ggtitle(title);
freqhist.economic;
}
freqhist.economic(schools, "STUDENTS_PROJECT_SNIP", TRUE, FALSE)
freqhist.economic(schools, "STUDENTS_PROJECT_CATCHMENT", TRUE, FALSE)
freqhist.economic(schools, "STUDENTS_PROJECT_COMPLEX", TRUE, FALSE)
freqhist.economic(schools, "STUDENTS_2015", FALSE, FALSE)
scat.dist.to.rating(schools, "DIST_TO_CENTER", "RATING", FALSE)
scat.dist.to.rating  <- function(schools, dist.field, rating.field, show.titles = TRUE) {
not.in.rat <- max(schools[!is.na(schools[[rating.field]]),][[rating.field]]) + 10;
schools$rat <- sapply(schools[[rating.field]], {function(x) ifelse(is.na(x), not.in.rat, x)});
schools$dst <- schools[[dist.field]]/1000
colors = c("#264500", "#267300", "#38A800", "#4CE600", "#55ff00", "#FF7F7F", "#E60000", "#A80000", "#730000");
x.axis.name <- "\nРасстояние от центра Москвы (км)"
y.axis.name <- "\nРейтинг школы"
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
}
scat.dist.to.rating <- ggplot(schools, aes_string(x="dst", y="rat")) +
geom_point(shape = 20, aes(color=cut(rat, breaks=seq(0, 450, by = 50)))) +
scale_colour_manual("", values=colors) +
scale_x_continuous(name=x.axis.name, breaks=seq(0, 40, by = 5), limits=c(0,40)) +
scale_y_continuous(name=y.axis.name, breaks=c(seq(0, 410, by = 50), 410),
limits=c(0, 410), labels=c("1","50","100","150","200","250","300","350","400","Вне рейтинга")) +
theme_minimal() +
theme(legend.position="none")
scat.dist.to.rating;
}
scat.dist.to.rating(schools, "DIST_TO_CENTER", "RATING", FALSE)
scat.catch.to.rating  <- function(schools, students.field, rating.field, show.titles = TRUE) {
not.in.rat <- max(schools[!is.na(schools[[rating.field]]),][[rating.field]]) + 10;
schools$rat <- sapply(schools[[rating.field]], {function(x) ifelse(is.na(x), not.in.rat, x)});
colors = c("#264500", "#267300", "#38A800", "#4CE600", "#55ff00", "#FF7F7F", "#E60000", "#A80000", "#730000");
x.axis.name <- "\nКоличество обслуживаемых школьников"
y.axis.name <- "\nРейтинг школы"
if (!show.titles) {
x.axis.name <- ""
y.axis.name <- ""
}
scat.catch.to.rating <- ggplot(schools, aes_string(x=students.field, y="rat")) +
geom_point(shape = 20, aes(color=cut(rat, breaks=seq(0, 450, by = 50)))) +
scale_colour_manual("", values=colors) +
scale_x_continuous(name=x.axis.name, breaks=seq(0, 2500, by = 500), limits=c(0,2500)) +
scale_y_continuous(name=y.axis.name, breaks= c(seq(0, 410, by = 50), 410),
limits=c(0, 410), labels=c("1","50","100","150","200","250","300","350","400","Вне рейтинга")) +
#geom_smooth(method=lm) +
theme_minimal() +
theme(legend.position="none")
scat.catch.to.rating;
}
scat.catch.to.rating(schools, "STUDENTS_PROJECT_COMPLEX", "RATING", FALSE)
save.image()
savehistory()
View(complexes)
complex.size = function(complexes){
complex.size = data.frame();
xPathStep1 <- "//div[text()='Сведения о реализации образовательных программ']/following-sibling::table[1]/tbody/tr/td[text()='Начальное общее']/following-sibling::td[2]/text()";
xPathStep2 <- "//div[text()='Сведения о реализации образовательных программ']/following-sibling::table[1]/tbody/tr/td[text()='Основное общее']/following-sibling::td[2]/text()";
xPathStep3 <- "//div[text()='Сведения о реализации образовательных программ']/following-sibling::table[1]/tbody/tr/td[text()='Среднее общее']/following-sibling::td[2]/text()";
for (cIdx in 1:nrow(complexes)) {
cId <- complexes$ID[cIdx];
url <- complexes$WEBSITE[cIdx];
print(paste(cIdx, " ", url, " ", round((100*cIdx)/nrow(complexes), digits = 2), "%", sep = ""));
step1 <- NA;
step2 <- NA;
step3 <- NA;
if (!is.null(url)) {
page <- htmlParse(paste(sep = "", url, "info_edu/education/"));
nodes1 <- xpathApply(doc = page, path = xPathStep1);
nodes2 <- xpathApply(doc = page, path = xPathStep2);
nodes3 <- xpathApply(doc = page, path = xPathStep3);
if (length(nodes1) > 0) {
step1 <- as.numeric(xmlValue(nodes1[[1]]));
};
if (length(nodes2) > 0) {
step2 <- as.numeric(xmlValue(nodes2[[1]]));
};
if (length(nodes3) > 0) {
step3 <- as.numeric(xmlValue(nodes3[[1]]));
};
};
df <- data.frame(ID=cId, STEP1 = step1, STEP2 = step2, STEP3 = step3);
complex.size <- rbind(complex.size, df);
write.csv(complex.size, "~/Desktop/complex.size.csv", row.names = FALSE, na = "")
}
complex.size;
}
complex.size(complexes)
library("XML", lib.loc="~/R/i686-pc-linux-gnu-library/3.3")
library("XML", lib.loc="~/R/i686-pc-linux-gnu-library/3.3")
complex.size(complexes)
complexes[ID == 174]
complexes[ID == 174,]
complexes[complexes$ID == 174,]
complexes[complexes$ID == 174,]$NAME
complexes[complexes$ID == 174,]$WEBSITE = "http://sch1454s.mskobr.ru/"
complexes[complexes$ID == 174,]$WEBSITE
complex.size(complexes)
complex.size <- read.csv("~/Desktop/complex.size.csv")
View(complex.size)
complexes$STEP1_2016 <- NULL
complexes$STEP2_2016 <- NULL
complexes$STEP3_2016 <- NULL
complexes$STEP1_2016 <- 0
complexes$STEP2_2016 <- 0
complexes$STEP3_2016 <- 0
View(complexes)
complexes1 <- merge(complexes, complex.size, by.x = "ID", by.y = "ID")
View(complexes1)
complexes1$STEP1_2016 <- complexes$STEP1
View(complexes1)
complexes1 <- merge(complexes, complex.size, by.x = "ID", by.y = "ID")
complexes1$STEP1_2016 <- complexes1$STEP1
complexes1$STEP2_2016 <- complexes1$STEP2
complexes1$STEP3_2016 <- complexes1$STEP3
complexes1$STEP1 <- NULL
complexes1$STEP2 <- NULL
complexes1$STEP3 <- NULL
attributes(complexes)
colnames(complexes1)
complexes2 <- complexes1[data[c("ID", "NAME", "NUMB", "WEBSITE", "TYPE", "OKRUG", "FOUNDATION", "SCHOOLS_COUNT", "STEP1_2014", "STEP1_2015", "STEP2_2014", "STEP2_2015", "STEP1_2016", "STEP2_2016", "STEP3_2016", "STEP3_2014", "STEP3_2015", "STUDENTS_2014", "STUDENTS_2015", "STUDENTS_PER_SCHOOL_2014", "STUDENTS_PER_SCHOOL_2015", "CATCHEMENT_AREA_STUDENTS")]]
complexes2 <- complexes1[c("ID", "NAME", "NUMB", "WEBSITE", "TYPE", "OKRUG", "FOUNDATION", "SCHOOLS_COUNT", "STEP1_2014", "STEP1_2015", "STEP2_2014", "STEP2_2015", "STEP1_2016", "STEP2_2016", "STEP3_2016", "STEP3_2014", "STEP3_2015", "STUDENTS_2014", "STUDENTS_2015", "STUDENTS_PER_SCHOOL_2014", "STUDENTS_PER_SCHOOL_2015", "CATCHEMENT_AREA_STUDENTS")]
View(complexes2)
complexes2 <- complexes1[c("ID", "NAME", "NUMB", "WEBSITE", "TYPE", "OKRUG", "FOUNDATION", "SCHOOLS_COUNT", "STEP1_2014", "STEP1_2015", "STEP1_2016", "STEP2_2014", "STEP2_2015", "STEP2_2016", "STEP3_2014", "STEP3_2015", "STEP3_2016", "STUDENTS_2014", "STUDENTS_2015", "STUDENTS_PER_SCHOOL_2014", "STUDENTS_PER_SCHOOL_2015", "CATCHEMENT_AREA_STUDENTS")]
complexes <- complexes2
rm(complexes1, complexes2)
rm(complex.size)
save.image()
savehistory()
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/i686-pc-linux-gnu-library/3.3")
detach("package:ggplot2", unload=TRUE)
